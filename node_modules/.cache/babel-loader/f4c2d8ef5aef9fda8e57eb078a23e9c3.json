{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Matias/Downloads/svy final/SPreace-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Matias/Downloads/svy final/SPreace-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Matias/Downloads/svy final/SPreace-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Button,Flex,Heading}from'@pancakeswap-libs/uikit';import useI18n from'hooks/useI18n';import{useHarvest}from'hooks/useHarvest';import{getBalanceNumber}from'utils/formatBalance';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var HarvestAction=function HarvestAction(_ref){var earnings=_ref.earnings,pid=_ref.pid;var TranslateString=useI18n();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useHarvest=useHarvest(pid),onReward=_useHarvest.onReward;var rawEarningsBalance=getBalanceNumber(earnings);var displayBalance=rawEarningsBalance.toLocaleString();return/*#__PURE__*/_jsxs(Flex,{mb:\"8px\",justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Heading,{color:rawEarningsBalance===0?'textDisabled':'text',children:displayBalance}),/*#__PURE__*/_jsx(Button,{disabled:rawEarningsBalance===0||pendingTx,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);_context.next=3;return onReward();case 3:setPendingTx(false);case 4:case\"end\":return _context.stop();}}},_callee);})),children:TranslateString(562,'Harvest')})]});};export default HarvestAction;","map":{"version":3,"sources":["C:/Users/Matias/Downloads/svy final/SPreace-frontend/src/views/Farms/components/FarmCard/HarvestAction.tsx"],"names":["React","useState","Button","Flex","Heading","useI18n","useHarvest","getBalanceNumber","HarvestAction","earnings","pid","TranslateString","pendingTx","setPendingTx","onReward","rawEarningsBalance","displayBalance","toLocaleString"],"mappings":"8fAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,OAAvB,KAAsC,yBAAtC,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,gBAAT,KAAiC,qBAAjC,C,wFAOA,GAAMC,CAAAA,aAA6C,CAAG,QAAhDA,CAAAA,aAAgD,MAAuB,IAApBC,CAAAA,QAAoB,MAApBA,QAAoB,CAAVC,GAAU,MAAVA,GAAU,CAC3E,GAAMC,CAAAA,eAAe,CAAGN,OAAO,EAA/B,CAD2E,cAEzCJ,QAAQ,CAAC,KAAD,CAFiC,wCAEpEW,SAFoE,eAEzDC,YAFyD,+BAGtDP,UAAU,CAACI,GAAD,CAH4C,CAGnEI,QAHmE,aAGnEA,QAHmE,CAK3E,GAAMC,CAAAA,kBAAkB,CAAGR,gBAAgB,CAACE,QAAD,CAA3C,CACA,GAAMO,CAAAA,cAAc,CAAGD,kBAAkB,CAACE,cAAnB,EAAvB,CAEA,mBACE,MAAC,IAAD,EAAM,EAAE,CAAC,KAAT,CAAe,cAAc,CAAC,eAA9B,CAA8C,UAAU,CAAC,QAAzD,wBACE,KAAC,OAAD,EAAS,KAAK,CAAEF,kBAAkB,GAAK,CAAvB,CAA2B,cAA3B,CAA4C,MAA5D,UAAqEC,cAArE,EADF,cAEE,KAAC,MAAD,EACE,QAAQ,CAAED,kBAAkB,GAAK,CAAvB,EAA4BH,SADxC,CAEE,OAAO,sEAAE,mIACPC,YAAY,CAAC,IAAD,CAAZ,CADO,sBAEDC,CAAAA,QAAQ,EAFP,QAGPD,YAAY,CAAC,KAAD,CAAZ,CAHO,sDAAF,EAFT,UAQGF,eAAe,CAAC,GAAD,CAAM,SAAN,CARlB,EAFF,GADF,CAeD,CAvBD,CAyBA,cAAeH,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n}\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n\r\n  const rawEarningsBalance = getBalanceNumber(earnings)\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      <Button\r\n        disabled={rawEarningsBalance === 0 || pendingTx}\r\n        onClick={async () => {\r\n          setPendingTx(true)\r\n          await onReward()\r\n          setPendingTx(false)\r\n        }}\r\n      >\r\n        {TranslateString(562, 'Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n"]},"metadata":{},"sourceType":"module"}
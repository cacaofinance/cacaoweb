{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROYECTOS\\\\svy.finance\\\\src\\\\components\\\\Menu\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit';\nimport { useWeb3React } from '@web3-react/core';\nimport { allLanguages } from 'config/localisation/languageCodes';\nimport { LanguageContext } from 'contexts/Localisation/languageContext';\nimport useTheme from 'hooks/useTheme';\nimport useAuth from 'hooks/useAuth';\nimport { usePriceCakeBusd, usePriceSVYBusd, useProfile } from 'state/hooks';\nimport config from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = props => {\n  _s();\n\n  var _profile$nft;\n\n  const {\n    account\n  } = useWeb3React();\n  const {\n    login,\n    logout\n  } = useAuth();\n  const {\n    selectedLanguage,\n    setSelectedLanguage\n  } = useContext(LanguageContext);\n  const {\n    isDark,\n    toggleTheme\n  } = useTheme();\n  const cakePriceUsd = usePriceCakeBusd();\n  const svyPriceUsd = usePriceSVYBusd();\n  const {\n    profile\n  } = useProfile();\n  return /*#__PURE__*/_jsxDEV(UikitMenu, {\n    account: account,\n    login: login,\n    logout: logout,\n    isDark: isDark,\n    toggleTheme: toggleTheme,\n    currentLang: selectedLanguage && selectedLanguage.code,\n    langs: allLanguages,\n    setLang: setSelectedLanguage,\n    cakePriceUsd: cakePriceUsd.toNumber(),\n    svyPriceUsd: svyPriceUsd,\n    links: config,\n    profile: {\n      username: profile === null || profile === void 0 ? void 0 : profile.username,\n      image: (profile === null || profile === void 0 ? void 0 : profile.nft) ? `/images/nfts/${(_profile$nft = profile.nft) === null || _profile$nft === void 0 ? void 0 : _profile$nft.images.sm}` : undefined,\n      profileLink: '/profile',\n      noProfileLink: '/profile',\n      showPip: !(profile === null || profile === void 0 ? void 0 : profile.username)\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Menu, \"fRDhuRIL5l1fqfu9Kn9Fwgmdykk=\", false, function () {\n  return [useWeb3React, useAuth, useTheme, usePriceCakeBusd, usePriceSVYBusd, useProfile];\n});\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["C:/PROYECTOS/svy.finance/src/components/Menu/index.tsx"],"names":["React","useContext","Menu","UikitMenu","useWeb3React","allLanguages","LanguageContext","useTheme","useAuth","usePriceCakeBusd","usePriceSVYBusd","useProfile","config","props","account","login","logout","selectedLanguage","setSelectedLanguage","isDark","toggleTheme","cakePriceUsd","svyPriceUsd","profile","code","toNumber","username","image","nft","images","sm","undefined","profileLink","noProfileLink","showPip"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAI,IAAIC,SAAjB,QAAkC,yBAAlC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,SAASC,eAAT,QAAgC,uCAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,gBAAT,EAA2BC,eAA3B,EAA4CC,UAA5C,QAA8D,aAA9D;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMV,IAAI,GAAIW,KAAD,IAAW;AAAA;;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAcV,YAAY,EAAhC;AACA,QAAM;AAAEW,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBR,OAAO,EAAjC;AACA,QAAM;AAAES,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAA4CjB,UAAU,CAACK,eAAD,CAA5D;AACA,QAAM;AAAEa,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA0Bb,QAAQ,EAAxC;AACA,QAAMc,YAAY,GAAGZ,gBAAgB,EAArC;AACA,QAAMa,WAAW,GAAGZ,eAAe,EAAnC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAcZ,UAAU,EAA9B;AAEA,sBACE,QAAC,SAAD;AACE,IAAA,OAAO,EAAEG,OADX;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,IAAA,MAAM,EAAEG,MAJV;AAKE,IAAA,WAAW,EAAEC,WALf;AAME,IAAA,WAAW,EAAEH,gBAAgB,IAAIA,gBAAgB,CAACO,IANpD;AAOE,IAAA,KAAK,EAAEnB,YAPT;AAQE,IAAA,OAAO,EAAEa,mBARX;AASE,IAAA,YAAY,EAAEG,YAAY,CAACI,QAAb,EAThB;AAUE,IAAA,WAAW,EAAEH,WAVf;AAWE,IAAA,KAAK,EAAEV,MAXT;AAYE,IAAA,OAAO,EAAE;AACPc,MAAAA,QAAQ,EAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEG,QADZ;AAEPC,MAAAA,KAAK,EAAE,CAAAJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEK,GAAT,IAAgB,gBAAD,gBAAgBL,OAAO,CAACK,GAAxB,iDAAgB,aAAaC,MAAb,CAAoBC,EAAG,EAAtD,GAA0DC,SAF1D;AAGPC,MAAAA,WAAW,EAAE,UAHN;AAIPC,MAAAA,aAAa,EAAE,UAJR;AAKPC,MAAAA,OAAO,EAAE,EAACX,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEG,QAAV;AALF,KAZX;AAAA,OAmBMb;AAnBN;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CAhCD;;GAAMX,I;UACgBE,Y,EACMI,O,EAEMD,Q,EACXE,gB,EACDC,e,EACAC,U;;;KAPhBT,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { allLanguages } from 'config/localisation/languageCodes'\r\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { usePriceCakeBusd, usePriceSVYBusd, useProfile } from 'state/hooks'\r\nimport config from './config'\r\n\r\nconst Menu = (props) => {\r\n  const { account } = useWeb3React()\r\n  const { login, logout } = useAuth()\r\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const svyPriceUsd = usePriceSVYBusd()\r\n  const { profile } = useProfile()\r\n\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={login}\r\n      logout={logout}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={selectedLanguage && selectedLanguage.code}\r\n      langs={allLanguages}\r\n      setLang={setSelectedLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      svyPriceUsd={svyPriceUsd}\r\n      links={config}\r\n      profile={{\r\n        username: profile?.username,\r\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\r\n        profileLink: '/profile',\r\n        noProfileLink: '/profile',\r\n        showPip: !profile?.username,\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n"]},"metadata":{},"sourceType":"module"}
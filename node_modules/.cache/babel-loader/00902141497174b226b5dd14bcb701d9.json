{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializeError = exports.isValidCode = exports.getMessageFromCode = exports.JSON_RPC_SERVER_ERROR_MESSAGE = void 0;\n\nvar error_constants_1 = require(\"./error-constants\");\n\nvar classes_1 = require(\"./classes\");\n\nvar FALLBACK_ERROR_CODE = error_constants_1.errorCodes.rpc.internal;\nvar FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.';\nvar FALLBACK_ERROR = {\n  code: FALLBACK_ERROR_CODE,\n  message: getMessageFromCode(FALLBACK_ERROR_CODE)\n};\nexports.JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.';\n/**\r\n * Gets the message for a given code, or a fallback message if the code has\r\n * no corresponding message.\r\n */\n\nfunction getMessageFromCode(code) {\n  var fallbackMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FALLBACK_MESSAGE;\n\n  if (Number.isInteger(code)) {\n    var codeString = code.toString();\n\n    if (hasKey(error_constants_1.errorValues, codeString)) {\n      return error_constants_1.errorValues[codeString].message;\n    }\n\n    if (isJsonRpcServerError(code)) {\n      return exports.JSON_RPC_SERVER_ERROR_MESSAGE;\n    }\n  }\n\n  return fallbackMessage;\n}\n\nexports.getMessageFromCode = getMessageFromCode;\n/**\r\n * Returns whether the given code is valid.\r\n * A code is only valid if it has a message.\r\n */\n\nfunction isValidCode(code) {\n  if (!Number.isInteger(code)) {\n    return false;\n  }\n\n  var codeString = code.toString();\n\n  if (error_constants_1.errorValues[codeString]) {\n    return true;\n  }\n\n  if (isJsonRpcServerError(code)) {\n    return true;\n  }\n\n  return false;\n}\n\nexports.isValidCode = isValidCode;\n/**\r\n * Serializes the given error to an Ethereum JSON RPC-compatible error object.\r\n * Merely copies the given error's values if it is already compatible.\r\n * If the given error is not fully compatible, it will be preserved on the\r\n * returned object's data.originalError property.\r\n */\n\nfunction serializeError(error) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$fallbackError = _ref.fallbackError,\n      fallbackError = _ref$fallbackError === void 0 ? FALLBACK_ERROR : _ref$fallbackError,\n      _ref$shouldIncludeSta = _ref.shouldIncludeStack,\n      shouldIncludeStack = _ref$shouldIncludeSta === void 0 ? false : _ref$shouldIncludeSta;\n\n  var _a, _b;\n\n  if (!fallbackError || !Number.isInteger(fallbackError.code) || typeof fallbackError.message !== 'string') {\n    throw new Error('Must provide fallback error with integer number code and string message.');\n  }\n\n  if (error instanceof classes_1.EthereumRpcError) {\n    return error.serialize();\n  }\n\n  var serialized = {};\n\n  if (error && typeof error === 'object' && !Array.isArray(error) && hasKey(error, 'code') && isValidCode(error.code)) {\n    var _error = error;\n    serialized.code = _error.code;\n\n    if (_error.message && typeof _error.message === 'string') {\n      serialized.message = _error.message;\n\n      if (hasKey(_error, 'data')) {\n        serialized.data = _error.data;\n      }\n    } else {\n      serialized.message = getMessageFromCode(serialized.code);\n      serialized.data = {\n        originalError: assignOriginalError(error)\n      };\n    }\n  } else {\n    serialized.code = fallbackError.code;\n    var message = (_a = error) === null || _a === void 0 ? void 0 : _a.message;\n    serialized.message = message && typeof message === 'string' ? message : fallbackError.message;\n    serialized.data = {\n      originalError: assignOriginalError(error)\n    };\n  }\n\n  var stack = (_b = error) === null || _b === void 0 ? void 0 : _b.stack;\n\n  if (shouldIncludeStack && error && stack && typeof stack === 'string') {\n    serialized.stack = stack;\n  }\n\n  return serialized;\n}\n\nexports.serializeError = serializeError; // Internal\n\nfunction isJsonRpcServerError(code) {\n  return code >= -32099 && code <= -32000;\n}\n\nfunction assignOriginalError(error) {\n  if (error && typeof error === 'object' && !Array.isArray(error)) {\n    return Object.assign({}, error);\n  }\n\n  return error;\n}\n\nfunction hasKey(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}","map":{"version":3,"sources":["../src/utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.serializeError = exports.isValidCode = exports.getMessageFromCode = exports.JSON_RPC_SERVER_ERROR_MESSAGE = void 0;\r\nconst error_constants_1 = require(\"./error-constants\");\r\nconst classes_1 = require(\"./classes\");\r\nconst FALLBACK_ERROR_CODE = error_constants_1.errorCodes.rpc.internal;\r\nconst FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.';\r\nconst FALLBACK_ERROR = {\r\n    code: FALLBACK_ERROR_CODE,\r\n    message: getMessageFromCode(FALLBACK_ERROR_CODE),\r\n};\r\nexports.JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.';\r\n/**\r\n * Gets the message for a given code, or a fallback message if the code has\r\n * no corresponding message.\r\n */\r\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\r\n    if (Number.isInteger(code)) {\r\n        const codeString = code.toString();\r\n        if (hasKey(error_constants_1.errorValues, codeString)) {\r\n            return error_constants_1.errorValues[codeString].message;\r\n        }\r\n        if (isJsonRpcServerError(code)) {\r\n            return exports.JSON_RPC_SERVER_ERROR_MESSAGE;\r\n        }\r\n    }\r\n    return fallbackMessage;\r\n}\r\nexports.getMessageFromCode = getMessageFromCode;\r\n/**\r\n * Returns whether the given code is valid.\r\n * A code is only valid if it has a message.\r\n */\r\nfunction isValidCode(code) {\r\n    if (!Number.isInteger(code)) {\r\n        return false;\r\n    }\r\n    const codeString = code.toString();\r\n    if (error_constants_1.errorValues[codeString]) {\r\n        return true;\r\n    }\r\n    if (isJsonRpcServerError(code)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexports.isValidCode = isValidCode;\r\n/**\r\n * Serializes the given error to an Ethereum JSON RPC-compatible error object.\r\n * Merely copies the given error's values if it is already compatible.\r\n * If the given error is not fully compatible, it will be preserved on the\r\n * returned object's data.originalError property.\r\n */\r\nfunction serializeError(error, { fallbackError = FALLBACK_ERROR, shouldIncludeStack = false, } = {}) {\r\n    var _a, _b;\r\n    if (!fallbackError ||\r\n        !Number.isInteger(fallbackError.code) ||\r\n        typeof fallbackError.message !== 'string') {\r\n        throw new Error('Must provide fallback error with integer number code and string message.');\r\n    }\r\n    if (error instanceof classes_1.EthereumRpcError) {\r\n        return error.serialize();\r\n    }\r\n    const serialized = {};\r\n    if (error &&\r\n        typeof error === 'object' &&\r\n        !Array.isArray(error) &&\r\n        hasKey(error, 'code') &&\r\n        isValidCode(error.code)) {\r\n        const _error = error;\r\n        serialized.code = _error.code;\r\n        if (_error.message && typeof _error.message === 'string') {\r\n            serialized.message = _error.message;\r\n            if (hasKey(_error, 'data')) {\r\n                serialized.data = _error.data;\r\n            }\r\n        }\r\n        else {\r\n            serialized.message = getMessageFromCode(serialized.code);\r\n            serialized.data = { originalError: assignOriginalError(error) };\r\n        }\r\n    }\r\n    else {\r\n        serialized.code = fallbackError.code;\r\n        const message = (_a = error) === null || _a === void 0 ? void 0 : _a.message;\r\n        serialized.message = (message && typeof message === 'string'\r\n            ? message\r\n            : fallbackError.message);\r\n        serialized.data = { originalError: assignOriginalError(error) };\r\n    }\r\n    const stack = (_b = error) === null || _b === void 0 ? void 0 : _b.stack;\r\n    if (shouldIncludeStack && error && stack && typeof stack === 'string') {\r\n        serialized.stack = stack;\r\n    }\r\n    return serialized;\r\n}\r\nexports.serializeError = serializeError;\r\n// Internal\r\nfunction isJsonRpcServerError(code) {\r\n    return code >= -32099 && code <= -32000;\r\n}\r\nfunction assignOriginalError(error) {\r\n    if (error && typeof error === 'object' && !Array.isArray(error)) {\r\n        return Object.assign({}, error);\r\n    }\r\n    return error;\r\n}\r\nfunction hasKey(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdURBQTREO0FBQzVELHVDQUF5RTtBQUV6RSxNQUFNLG1CQUFtQixHQUFHLDRCQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQztBQUNwRCxNQUFNLGdCQUFnQixHQUFHLDZEQUE2RCxDQUFDO0FBQ3ZGLE1BQU0sY0FBYyxHQUErQjtJQUNqRCxJQUFJLEVBQUUsbUJBQW1CO0lBQ3pCLE9BQU8sRUFBRSxrQkFBa0IsQ0FBQyxtQkFBbUIsQ0FBQztDQUNqRCxDQUFDO0FBRVcsUUFBQSw2QkFBNkIsR0FBRywyQkFBMkIsQ0FBQztBQUl6RTs7O0dBR0c7QUFDSCxTQUFnQixrQkFBa0IsQ0FDaEMsSUFBWSxFQUNaLGtCQUEwQixnQkFBZ0I7SUFFMUMsSUFBSSxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQzFCLE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUVuQyxJQUFJLE1BQU0sQ0FBQyw2QkFBVyxFQUFFLFVBQVUsQ0FBQyxFQUFFO1lBQ25DLE9BQU8sNkJBQVcsQ0FBQyxVQUEyQixDQUFDLENBQUMsT0FBTyxDQUFDO1NBQ3pEO1FBQ0QsSUFBSSxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM5QixPQUFPLHFDQUE2QixDQUFDO1NBQ3RDO0tBQ0Y7SUFDRCxPQUFPLGVBQWUsQ0FBQztBQUN6QixDQUFDO0FBZkQsZ0RBZUM7QUFFRDs7O0dBR0c7QUFDSCxTQUFnQixXQUFXLENBQUMsSUFBWTtJQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUMzQixPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ25DLElBQUksNkJBQVcsQ0FBQyxVQUEy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"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Matias/Downloads/new/svy.finance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/Matias/Downloads/new/svy.finance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:/Users/Matias/Downloads/new/svy.finance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/Matias/Downloads/new/svy.finance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Distributions = void 0;\n\nvar core_1 = require(\"../core\");\n\nvar Distributions = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(Distributions, _core_1$CrowdinApi);\n\n  var _super = _createSuper(Distributions);\n\n  function Distributions() {\n    _classCallCheck(this, Distributions);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Distributions, [{\n    key: \"listDistributions\",\n    value:\n    /**\r\n     * @param projectId project identifier\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     */\n    function listDistributions(projectId, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/distributions\");\n      return this.getList(url, limit, offset);\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param request request body\r\n     */\n\n  }, {\n    key: \"createDistribution\",\n    value: function createDistribution(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/distributions\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param hash hash\r\n     */\n\n  }, {\n    key: \"getDistribution\",\n    value: function getDistribution(projectId, hash) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/distributions/\").concat(hash);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param hash hash\r\n     */\n\n  }, {\n    key: \"deleteDistribution\",\n    value: function deleteDistribution(projectId, hash) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/distributions/\").concat(hash);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param hash hash\r\n     * @param request request body\r\n     */\n\n  }, {\n    key: \"editDistribution\",\n    value: function editDistribution(projectId, hash, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/distributions/\").concat(hash);\n      return this.patch(url, request, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param hash hash\r\n     */\n\n  }, {\n    key: \"getDistributionRelease\",\n    value: function getDistributionRelease(projectId, hash) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/distributions/\").concat(hash, \"/release\");\n      return this.get(url, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param hash hash\r\n     * @param request request body\r\n     */\n\n  }, {\n    key: \"createDistributionRelease\",\n    value: function createDistributionRelease(projectId, hash) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/distributions/\").concat(hash, \"/release\");\n      return this.post(url, {}, this.defaultConfig());\n    }\n  }]);\n\n  return Distributions;\n}(core_1.CrowdinApi);\n\nexports.Distributions = Distributions;","map":{"version":3,"sources":["C:/Users/Matias/Downloads/new/svy.finance/node_modules/@crowdin/crowdin-api-client/out/distributions/index.js"],"names":["Object","defineProperty","exports","value","Distributions","core_1","require","projectId","limit","offset","url","getList","request","post","defaultConfig","hash","get","delete","patch","CrowdinApi"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;IACMF,a;;;;;;;;;;;;;;AACF;AACJ;AACA;AACA;AACA;AACI,+BAAkBG,SAAlB,EAA6BC,KAA7B,EAAoCC,MAApC,EAA4C;AACxC,UAAMC,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,mBAAT;AACA,aAAO,KAAKI,OAAL,CAAaD,GAAb,EAAkBF,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,4BAAmBF,SAAnB,EAA8BK,OAA9B,EAAuC;AACnC,UAAMF,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,mBAAT;AACA,aAAO,KAAKM,IAAL,CAAUH,GAAV,EAAeE,OAAf,EAAwB,KAAKE,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,yBAAgBP,SAAhB,EAA2BQ,IAA3B,EAAiC;AAC7B,UAAML,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,4BAAsDQ,IAAtD,CAAT;AACA,aAAO,KAAKC,GAAL,CAASN,GAAT,EAAc,KAAKI,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,4BAAmBP,SAAnB,EAA8BQ,IAA9B,EAAoC;AAChC,UAAML,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,4BAAsDQ,IAAtD,CAAT;AACA,aAAO,KAAKE,MAAL,CAAYP,GAAZ,EAAiB,KAAKI,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,0BAAiBP,SAAjB,EAA4BQ,IAA5B,EAAkCH,OAAlC,EAA2C;AACvC,UAAMF,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,4BAAsDQ,IAAtD,CAAT;AACA,aAAO,KAAKG,KAAL,CAAWR,GAAX,EAAgBE,OAAhB,EAAyB,KAAKE,aAAL,EAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,gCAAuBP,SAAvB,EAAkCQ,IAAlC,EAAwC;AACpC,UAAML,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,4BAAsDQ,IAAtD,aAAT;AACA,aAAO,KAAKC,GAAL,CAASN,GAAT,EAAc,KAAKI,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,mCAA0BP,SAA1B,EAAqCQ,IAArC,EAA2C;AACvC,UAAML,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,4BAAsDQ,IAAtD,aAAT;AACA,aAAO,KAAKF,IAAL,CAAUH,GAAV,EAAe,EAAf,EAAmB,KAAKI,aAAL,EAAnB,CAAP;AACH;;;;EA3DuBT,MAAM,CAACc,U;;AA6DnCjB,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Distributions = void 0;\r\nconst core_1 = require(\"../core\");\r\nclass Distributions extends core_1.CrowdinApi {\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     */\r\n    listDistributions(projectId, limit, offset) {\r\n        const url = `${this.url}/projects/${projectId}/distributions`;\r\n        return this.getList(url, limit, offset);\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param request request body\r\n     */\r\n    createDistribution(projectId, request) {\r\n        const url = `${this.url}/projects/${projectId}/distributions`;\r\n        return this.post(url, request, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param hash hash\r\n     */\r\n    getDistribution(projectId, hash) {\r\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\r\n        return this.get(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param hash hash\r\n     */\r\n    deleteDistribution(projectId, hash) {\r\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\r\n        return this.delete(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param hash hash\r\n     * @param request request body\r\n     */\r\n    editDistribution(projectId, hash, request) {\r\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}`;\r\n        return this.patch(url, request, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param hash hash\r\n     */\r\n    getDistributionRelease(projectId, hash) {\r\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}/release`;\r\n        return this.get(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param hash hash\r\n     * @param request request body\r\n     */\r\n    createDistributionRelease(projectId, hash) {\r\n        const url = `${this.url}/projects/${projectId}/distributions/${hash}/release`;\r\n        return this.post(url, {}, this.defaultConfig());\r\n    }\r\n}\r\nexports.Distributions = Distributions;\r\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StringTranslationsModel = exports.StringTranslations = void 0;\n\nconst core_1 = require(\"../core\");\n\nclass StringTranslations extends core_1.CrowdinApi {\n  /**\r\n   * @param projectId project identifier\r\n   * @param stringId string identifier\r\n   * @param languageId language identifier\r\n   * @param translationId translation identifier\r\n   * @param limit maximum number of items to retrieve (default 25)\r\n   * @param offset starting offset in the collection (default 0)\r\n   * @param fileId file identifier\r\n   */\n  listTranslationApprovals(projectId, stringId, languageId, translationId, limit, offset, fileId) {\n    let url = `${this.url}/projects/${projectId}/approvals`;\n    url = this.addQueryParam(url, 'stringId', stringId);\n    url = this.addQueryParam(url, 'languageId', languageId);\n    url = this.addQueryParam(url, 'translationId', translationId);\n    url = this.addQueryParam(url, 'fileId', fileId);\n    return this.getList(url, limit, offset);\n  }\n  /**\r\n   * @param projectId project identifier\r\n   * @param request request body\r\n   */\n\n\n  addApproval(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/approvals`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\r\n   * @param projectId project identifier\r\n   * @param approvalId approval identifier\r\n   */\n\n\n  approvalInfo(projectId, approvalId) {\n    const url = `${this.url}/projects/${projectId}/approvals/${approvalId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\r\n   * @param projectId project identifier\r\n   * @param approvalId approval identifier\r\n   */\n\n\n  removeApproval(projectId, approvalId) {\n    const url = `${this.url}/projects/${projectId}/approvals/${approvalId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\r\n   * @param projectId project identifier\r\n   * @param languageId language identifier\r\n   * @param stringIds filter translations by stringIds\r\n   * @param fileId filter translations by fileId\r\n   * @param limit maximum number of items to retrieve (default 25)\r\n   * @param offset starting offset in the collection (default 0)\r\n   * @param labelIds filter translations by fileId\r\n   * @param denormalizePlaceholders enable denormalize placeholders\r\n   */\n\n\n  listLanguageTranslations(projectId, languageId, stringIds, fileId, limit, offset, labelIds, denormalizePlaceholders) {\n    let url = `${this.url}/projects/${projectId}/languages/${languageId}/translations`;\n    url = this.addQueryParam(url, 'stringIds', stringIds);\n    url = this.addQueryParam(url, 'fileId', fileId);\n    url = this.addQueryParam(url, 'labelIds', labelIds);\n    url = this.addQueryParam(url, 'denormalizePlaceholders', denormalizePlaceholders);\n    return this.getList(url, limit, offset);\n  }\n  /**\r\n   * @param projectId project identifier\r\n   * @param stringId string identifier\r\n   * @param languageId language identifier\r\n   * @param limit maximum number of items to retrieve (default 25)\r\n   * @param offset starting offset in the collection (default 0)\r\n   * @param denormalizePlaceholders enable denormalize placeholders\r\n   */\n\n\n  listStringTranslations(projectId, stringId, languageId, limit, offset, denormalizePlaceholders) {\n    let url = `${this.url}/projects/${projectId}/translations`;\n    url = this.addQueryParam(url, 'stringId', stringId);\n    url = this.addQueryParam(url, 'languageId', languageId);\n    url = this.addQueryParam(url, 'denormalizePlaceholders', denormalizePlaceholders);\n    return this.getList(url, limit, offset);\n  }\n  /**\r\n   * @param projectId project identifier\r\n   * @param request request body\r\n   */\n\n\n  addTranslation(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/translations`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\r\n   * @param projectId project identifier\r\n   * @param stringId string identifier\r\n   * @param languageId language identifier\r\n   */\n\n\n  deleteAllTranslations(projectId, stringId, languageId) {\n    let url = `${this.url}/projects/${projectId}/translations`;\n    url = this.addQueryParam(url, 'stringId', stringId);\n    url = this.addQueryParam(url, 'languageId', languageId);\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\r\n   * @param projectId project identifier\r\n   * @param translationId translation identifier\r\n   */\n\n\n  translationInfo(projectId, translationId) {\n    const url = `${this.url}/projects/${projectId}/translations/${translationId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\r\n   * @param projectId project identifier\r\n   * @param translation translation identifier\r\n   */\n\n\n  deleteTranslation(projectId, translationId) {\n    const url = `${this.url}/projects/${projectId}/translations/${translationId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n  /**\r\n   * @param projectId project identifier\r\n   * @param translation translation identifier\r\n   */\n\n\n  restoreTranslation(projectId, translationId) {\n    const url = `${this.url}/projects/${projectId}/translations/${translationId}/restore`;\n    return this.put(url, {}, this.defaultConfig());\n  }\n  /**\r\n   * @param projectId project identifier\r\n   * @param stringId string identifier\r\n   * @param languageId language identifier\r\n   * @param translationId translation identifier\r\n   * @param limit maximum number of items to retrieve (default 25)\r\n   * @param offset starting offset in the collection (default 0)\r\n   */\n\n\n  listTranslationVotes(projectId, stringId, languageId, translationId, limit, offset) {\n    let url = `${this.url}/projects/${projectId}/votes`;\n    url = this.addQueryParam(url, 'stringId', stringId);\n    url = this.addQueryParam(url, 'languageId', languageId);\n    url = this.addQueryParam(url, 'translationId', translationId);\n    return this.getList(url, limit, offset);\n  }\n  /**\r\n   * @param projectId project identifier\r\n   * @param request request body\r\n   */\n\n\n  addVote(projectId, request) {\n    const url = `${this.url}/projects/${projectId}/votes`;\n    return this.post(url, request, this.defaultConfig());\n  }\n  /**\r\n   * @param projectId project identifier\r\n   * @param voteId vote identifier\r\n   */\n\n\n  voteInfo(projectId, voteId) {\n    const url = `${this.url}/projects/${projectId}/votes/${voteId}`;\n    return this.get(url, this.defaultConfig());\n  }\n  /**\r\n   * @param projectId project identifier\r\n   * @param voteId vote identifier\r\n   */\n\n\n  cancelVote(projectId, voteId) {\n    const url = `${this.url}/projects/${projectId}/votes/${voteId}`;\n    return this.delete(url, this.defaultConfig());\n  }\n\n}\n\nexports.StringTranslations = StringTranslations;\nvar StringTranslationsModel;\n\n(function (StringTranslationsModel) {\n  let Mark;\n\n  (function (Mark) {\n    Mark[\"UP\"] = \"up\";\n    Mark[\"DOWN\"] = \"down\";\n  })(Mark = StringTranslationsModel.Mark || (StringTranslationsModel.Mark = {}));\n})(StringTranslationsModel = exports.StringTranslationsModel || (exports.StringTranslationsModel = {}));","map":{"version":3,"sources":["C:/PROYECTOS/svy.finance/node_modules/@crowdin/crowdin-api-client/out/stringTranslations/index.js"],"names":["Object","defineProperty","exports","value","StringTranslationsModel","StringTranslations","core_1","require","CrowdinApi","listTranslationApprovals","projectId","stringId","languageId","translationId","limit","offset","fileId","url","addQueryParam","getList","addApproval","request","post","defaultConfig","approvalInfo","approvalId","get","removeApproval","delete","listLanguageTranslations","stringIds","labelIds","denormalizePlaceholders","listStringTranslations","addTranslation","deleteAllTranslations","translationInfo","deleteTranslation","restoreTranslation","put","listTranslationVotes","addVote","voteInfo","voteId","cancelVote","Mark"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StringTranslationsModel = exports.StringTranslations = void 0;\r\nconst core_1 = require(\"../core\");\r\nclass StringTranslations extends core_1.CrowdinApi {\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param stringId string identifier\r\n     * @param languageId language identifier\r\n     * @param translationId translation identifier\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     * @param fileId file identifier\r\n     */\r\n    listTranslationApprovals(projectId, stringId, languageId, translationId, limit, offset, fileId) {\r\n        let url = `${this.url}/projects/${projectId}/approvals`;\r\n        url = this.addQueryParam(url, 'stringId', stringId);\r\n        url = this.addQueryParam(url, 'languageId', languageId);\r\n        url = this.addQueryParam(url, 'translationId', translationId);\r\n        url = this.addQueryParam(url, 'fileId', fileId);\r\n        return this.getList(url, limit, offset);\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param request request body\r\n     */\r\n    addApproval(projectId, request) {\r\n        const url = `${this.url}/projects/${projectId}/approvals`;\r\n        return this.post(url, request, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param approvalId approval identifier\r\n     */\r\n    approvalInfo(projectId, approvalId) {\r\n        const url = `${this.url}/projects/${projectId}/approvals/${approvalId}`;\r\n        return this.get(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param approvalId approval identifier\r\n     */\r\n    removeApproval(projectId, approvalId) {\r\n        const url = `${this.url}/projects/${projectId}/approvals/${approvalId}`;\r\n        return this.delete(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param languageId language identifier\r\n     * @param stringIds filter translations by stringIds\r\n     * @param fileId filter translations by fileId\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     * @param labelIds filter translations by fileId\r\n     * @param denormalizePlaceholders enable denormalize placeholders\r\n     */\r\n    listLanguageTranslations(projectId, languageId, stringIds, fileId, limit, offset, labelIds, denormalizePlaceholders) {\r\n        let url = `${this.url}/projects/${projectId}/languages/${languageId}/translations`;\r\n        url = this.addQueryParam(url, 'stringIds', stringIds);\r\n        url = this.addQueryParam(url, 'fileId', fileId);\r\n        url = this.addQueryParam(url, 'labelIds', labelIds);\r\n        url = this.addQueryParam(url, 'denormalizePlaceholders', denormalizePlaceholders);\r\n        return this.getList(url, limit, offset);\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param stringId string identifier\r\n     * @param languageId language identifier\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     * @param denormalizePlaceholders enable denormalize placeholders\r\n     */\r\n    listStringTranslations(projectId, stringId, languageId, limit, offset, denormalizePlaceholders) {\r\n        let url = `${this.url}/projects/${projectId}/translations`;\r\n        url = this.addQueryParam(url, 'stringId', stringId);\r\n        url = this.addQueryParam(url, 'languageId', languageId);\r\n        url = this.addQueryParam(url, 'denormalizePlaceholders', denormalizePlaceholders);\r\n        return this.getList(url, limit, offset);\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param request request body\r\n     */\r\n    addTranslation(projectId, request) {\r\n        const url = `${this.url}/projects/${projectId}/translations`;\r\n        return this.post(url, request, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param stringId string identifier\r\n     * @param languageId language identifier\r\n     */\r\n    deleteAllTranslations(projectId, stringId, languageId) {\r\n        let url = `${this.url}/projects/${projectId}/translations`;\r\n        url = this.addQueryParam(url, 'stringId', stringId);\r\n        url = this.addQueryParam(url, 'languageId', languageId);\r\n        return this.delete(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param translationId translation identifier\r\n     */\r\n    translationInfo(projectId, translationId) {\r\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}`;\r\n        return this.get(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param translation translation identifier\r\n     */\r\n    deleteTranslation(projectId, translationId) {\r\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}`;\r\n        return this.delete(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param translation translation identifier\r\n     */\r\n    restoreTranslation(projectId, translationId) {\r\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}/restore`;\r\n        return this.put(url, {}, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param stringId string identifier\r\n     * @param languageId language identifier\r\n     * @param translationId translation identifier\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     */\r\n    listTranslationVotes(projectId, stringId, languageId, translationId, limit, offset) {\r\n        let url = `${this.url}/projects/${projectId}/votes`;\r\n        url = this.addQueryParam(url, 'stringId', stringId);\r\n        url = this.addQueryParam(url, 'languageId', languageId);\r\n        url = this.addQueryParam(url, 'translationId', translationId);\r\n        return this.getList(url, limit, offset);\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param request request body\r\n     */\r\n    addVote(projectId, request) {\r\n        const url = `${this.url}/projects/${projectId}/votes`;\r\n        return this.post(url, request, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param voteId vote identifier\r\n     */\r\n    voteInfo(projectId, voteId) {\r\n        const url = `${this.url}/projects/${projectId}/votes/${voteId}`;\r\n        return this.get(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param voteId vote identifier\r\n     */\r\n    cancelVote(projectId, voteId) {\r\n        const url = `${this.url}/projects/${projectId}/votes/${voteId}`;\r\n        return this.delete(url, this.defaultConfig());\r\n    }\r\n}\r\nexports.StringTranslations = StringTranslations;\r\nvar StringTranslationsModel;\r\n(function (StringTranslationsModel) {\r\n    let Mark;\r\n    (function (Mark) {\r\n        Mark[\"UP\"] = \"up\";\r\n        Mark[\"DOWN\"] = \"down\";\r\n    })(Mark = StringTranslationsModel.Mark || (StringTranslationsModel.Mark = {}));\r\n})(StringTranslationsModel = exports.StringTranslationsModel || (exports.StringTranslationsModel = {}));\r\n"]},"metadata":{},"sourceType":"script"}
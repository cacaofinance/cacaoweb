{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CrowdinApi = exports.BooleanInt = exports.PatchOperation = exports.HttpClientType = void 0;\n\nconst axiosProvider_1 = require(\"./internal/axios/axiosProvider\");\n\nconst fetchClient_1 = require(\"./internal/fetch/fetchClient\");\n\nconst retry_1 = require(\"./internal/retry\");\n\nvar HttpClientType;\n\n(function (HttpClientType) {\n  HttpClientType[\"AXIOS\"] = \"axios\";\n  HttpClientType[\"FETCH\"] = \"fetch\";\n})(HttpClientType = exports.HttpClientType || (exports.HttpClientType = {}));\n\nvar PatchOperation;\n\n(function (PatchOperation) {\n  PatchOperation[\"ADD\"] = \"add\";\n  PatchOperation[\"REMOVE\"] = \"remove\";\n  PatchOperation[\"REPLACE\"] = \"replace\";\n  PatchOperation[\"MOVE\"] = \"move\";\n  PatchOperation[\"copy\"] = \"copy\";\n  PatchOperation[\"TEST\"] = \"test\";\n})(PatchOperation = exports.PatchOperation || (exports.PatchOperation = {}));\n\nvar BooleanInt;\n\n(function (BooleanInt) {\n  BooleanInt[BooleanInt[\"TRUE\"] = 1] = \"TRUE\";\n  BooleanInt[BooleanInt[\"FALSE\"] = 0] = \"FALSE\";\n})(BooleanInt = exports.BooleanInt || (exports.BooleanInt = {}));\n\nclass CrowdinApi {\n  /**\r\n   * @param credentials credentials\r\n   * @param config optional configuration of the client\r\n   */\n  constructor(credentials, config) {\n    this.fetchAllFlag = false;\n    this.token = credentials.token;\n    this.organization = credentials.organization;\n\n    if (!!credentials.baseUrl) {\n      this.url = credentials.baseUrl;\n    } else {\n      if (!!this.organization) {\n        this.url = `https://${this.organization}.${CrowdinApi.CROWDIN_URL_SUFFIX}`;\n      } else {\n        this.url = `https://${CrowdinApi.CROWDIN_URL_SUFFIX}`;\n      }\n    }\n\n    let retryConfig;\n\n    if (!!config && !!config.retryConfig) {\n      retryConfig = config.retryConfig;\n    } else {\n      retryConfig = {\n        waitInterval: 0,\n        retries: 0,\n        conditions: []\n      };\n    }\n\n    this.retryService = new retry_1.RetryService(retryConfig);\n    this.config = config;\n  }\n\n  addQueryParam(url, name, value) {\n    if (!!value) {\n      url += new RegExp(/\\?.+=.*/g).test(url) ? '&' : '?';\n      url += `${name}=${value}`;\n    }\n\n    return url;\n  }\n\n  defaultConfig() {\n    const config = {\n      headers: {\n        Authorization: `Bearer ${this.token}`\n      }\n    };\n\n    if (!!this.config) {\n      if (!!this.config.userAgent) {\n        config.headers['User-Agent'] = this.config.userAgent;\n      }\n\n      if (!!this.config.integrationUserAgent) {\n        config.headers['X-Crowdin-Integrations-User-Agent'] = this.config.integrationUserAgent;\n      }\n    }\n\n    return config;\n  }\n\n  get httpClient() {\n    if (!!this.config) {\n      if (!!this.config.httpClient) {\n        return this.config.httpClient;\n      }\n\n      if (!!this.config.httpClientType) {\n        switch (this.config.httpClientType) {\n          case HttpClientType.AXIOS:\n            return CrowdinApi.AXIOS_INSTANCE;\n\n          case HttpClientType.FETCH:\n            return CrowdinApi.FETCH_INSTANCE;\n\n          default:\n            return CrowdinApi.AXIOS_INSTANCE;\n        }\n      }\n    }\n\n    return CrowdinApi.AXIOS_INSTANCE;\n  } // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\n\n  withFetchAll(maxLimit) {\n    this.fetchAllFlag = true;\n    this.maxLimit = maxLimit;\n    return this;\n  }\n\n  getList(url, limit, offset, config) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const conf = config || this.defaultConfig();\n\n      if (this.fetchAllFlag) {\n        this.fetchAllFlag = false;\n        const maxAmount = this.maxLimit;\n        this.maxLimit = undefined;\n        return yield this.fetchAll(url, conf, maxAmount);\n      } else {\n        url = this.addQueryParam(url, 'limit', limit);\n        url = this.addQueryParam(url, 'offset', offset);\n        return this.get(url, conf);\n      }\n    });\n  }\n\n  fetchAll(url, config, maxAmount) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let limit = 500;\n\n      if (!!maxAmount && maxAmount < limit) {\n        limit = maxAmount;\n      }\n\n      let offset = 0;\n      let resp;\n\n      for (;;) {\n        let urlWithPagination = this.addQueryParam(url, 'limit', limit);\n        urlWithPagination = this.addQueryParam(urlWithPagination, 'offset', offset);\n        const e = yield this.get(urlWithPagination, config);\n\n        if (!resp) {\n          resp = e;\n        } else {\n          resp.data = resp.data.concat(e.data);\n          resp.pagination.limit += e.data.length;\n        }\n\n        if (e.data.length < limit || !!maxAmount && resp.data.length >= maxAmount) {\n          break;\n        } else {\n          offset += limit;\n        }\n\n        if (!!maxAmount) {\n          if (maxAmount < resp.data.length + limit) {\n            limit = maxAmount - resp.data.length;\n          }\n        }\n      }\n\n      return resp;\n    });\n  } //Http overrides\n\n\n  get(url, config) {\n    return this.retryService.executeAsyncFunc(() => this.httpClient.get(url, config));\n  }\n\n  delete(url, config) {\n    return this.retryService.executeAsyncFunc(() => this.httpClient.delete(url, config));\n  }\n\n  head(url, config) {\n    return this.retryService.executeAsyncFunc(() => this.httpClient.head(url, config));\n  }\n\n  post(url, data, config) {\n    return this.retryService.executeAsyncFunc(() => this.httpClient.post(url, data, config));\n  }\n\n  put(url, data, config) {\n    return this.retryService.executeAsyncFunc(() => this.httpClient.put(url, data, config));\n  }\n\n  patch(url, data, config) {\n    return this.retryService.executeAsyncFunc(() => this.httpClient.patch(url, data, config));\n  }\n\n}\n\nexports.CrowdinApi = CrowdinApi;\nCrowdinApi.CROWDIN_URL_SUFFIX = 'api.crowdin.com/api/v2';\nCrowdinApi.AXIOS_INSTANCE = new axiosProvider_1.AxisProvider().axios;\nCrowdinApi.FETCH_INSTANCE = new fetchClient_1.FetchClient();","map":{"version":3,"sources":["C:/PROYECTOS/svy.finance/node_modules/@crowdin/crowdin-api-client/out/core/index.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","CrowdinApi","BooleanInt","PatchOperation","HttpClientType","axiosProvider_1","require","fetchClient_1","retry_1","constructor","credentials","config","fetchAllFlag","token","organization","baseUrl","url","CROWDIN_URL_SUFFIX","retryConfig","waitInterval","retries","conditions","retryService","RetryService","addQueryParam","name","RegExp","test","defaultConfig","headers","Authorization","userAgent","integrationUserAgent","httpClient","httpClientType","AXIOS","AXIOS_INSTANCE","FETCH","FETCH_INSTANCE","withFetchAll","maxLimit","getList","limit","offset","conf","maxAmount","undefined","fetchAll","get","resp","urlWithPagination","data","concat","pagination","length","executeAsyncFunc","delete","head","post","put","patch","AxisProvider","axios","FetchClient"],"mappings":"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","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.CrowdinApi = exports.BooleanInt = exports.PatchOperation = exports.HttpClientType = void 0;\r\nconst axiosProvider_1 = require(\"./internal/axios/axiosProvider\");\r\nconst fetchClient_1 = require(\"./internal/fetch/fetchClient\");\r\nconst retry_1 = require(\"./internal/retry\");\r\nvar HttpClientType;\r\n(function (HttpClientType) {\r\n    HttpClientType[\"AXIOS\"] = \"axios\";\r\n    HttpClientType[\"FETCH\"] = \"fetch\";\r\n})(HttpClientType = exports.HttpClientType || (exports.HttpClientType = {}));\r\nvar PatchOperation;\r\n(function (PatchOperation) {\r\n    PatchOperation[\"ADD\"] = \"add\";\r\n    PatchOperation[\"REMOVE\"] = \"remove\";\r\n    PatchOperation[\"REPLACE\"] = \"replace\";\r\n    PatchOperation[\"MOVE\"] = \"move\";\r\n    PatchOperation[\"copy\"] = \"copy\";\r\n    PatchOperation[\"TEST\"] = \"test\";\r\n})(PatchOperation = exports.PatchOperation || (exports.PatchOperation = {}));\r\nvar BooleanInt;\r\n(function (BooleanInt) {\r\n    BooleanInt[BooleanInt[\"TRUE\"] = 1] = \"TRUE\";\r\n    BooleanInt[BooleanInt[\"FALSE\"] = 0] = \"FALSE\";\r\n})(BooleanInt = exports.BooleanInt || (exports.BooleanInt = {}));\r\nclass CrowdinApi {\r\n    /**\r\n     * @param credentials credentials\r\n     * @param config optional configuration of the client\r\n     */\r\n    constructor(credentials, config) {\r\n        this.fetchAllFlag = false;\r\n        this.token = credentials.token;\r\n        this.organization = credentials.organization;\r\n        if (!!credentials.baseUrl) {\r\n            this.url = credentials.baseUrl;\r\n        }\r\n        else {\r\n            if (!!this.organization) {\r\n                this.url = `https://${this.organization}.${CrowdinApi.CROWDIN_URL_SUFFIX}`;\r\n            }\r\n            else {\r\n                this.url = `https://${CrowdinApi.CROWDIN_URL_SUFFIX}`;\r\n            }\r\n        }\r\n        let retryConfig;\r\n        if (!!config && !!config.retryConfig) {\r\n            retryConfig = config.retryConfig;\r\n        }\r\n        else {\r\n            retryConfig = {\r\n                waitInterval: 0,\r\n                retries: 0,\r\n                conditions: [],\r\n            };\r\n        }\r\n        this.retryService = new retry_1.RetryService(retryConfig);\r\n        this.config = config;\r\n    }\r\n    addQueryParam(url, name, value) {\r\n        if (!!value) {\r\n            url += new RegExp(/\\?.+=.*/g).test(url) ? '&' : '?';\r\n            url += `${name}=${value}`;\r\n        }\r\n        return url;\r\n    }\r\n    defaultConfig() {\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${this.token}`,\r\n            },\r\n        };\r\n        if (!!this.config) {\r\n            if (!!this.config.userAgent) {\r\n                config.headers['User-Agent'] = this.config.userAgent;\r\n            }\r\n            if (!!this.config.integrationUserAgent) {\r\n                config.headers['X-Crowdin-Integrations-User-Agent'] = this.config.integrationUserAgent;\r\n            }\r\n        }\r\n        return config;\r\n    }\r\n    get httpClient() {\r\n        if (!!this.config) {\r\n            if (!!this.config.httpClient) {\r\n                return this.config.httpClient;\r\n            }\r\n            if (!!this.config.httpClientType) {\r\n                switch (this.config.httpClientType) {\r\n                    case HttpClientType.AXIOS:\r\n                        return CrowdinApi.AXIOS_INSTANCE;\r\n                    case HttpClientType.FETCH:\r\n                        return CrowdinApi.FETCH_INSTANCE;\r\n                    default:\r\n                        return CrowdinApi.AXIOS_INSTANCE;\r\n                }\r\n            }\r\n        }\r\n        return CrowdinApi.AXIOS_INSTANCE;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\r\n    withFetchAll(maxLimit) {\r\n        this.fetchAllFlag = true;\r\n        this.maxLimit = maxLimit;\r\n        return this;\r\n    }\r\n    getList(url, limit, offset, config) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const conf = config || this.defaultConfig();\r\n            if (this.fetchAllFlag) {\r\n                this.fetchAllFlag = false;\r\n                const maxAmount = this.maxLimit;\r\n                this.maxLimit = undefined;\r\n                return yield this.fetchAll(url, conf, maxAmount);\r\n            }\r\n            else {\r\n                url = this.addQueryParam(url, 'limit', limit);\r\n                url = this.addQueryParam(url, 'offset', offset);\r\n                return this.get(url, conf);\r\n            }\r\n        });\r\n    }\r\n    fetchAll(url, config, maxAmount) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let limit = 500;\r\n            if (!!maxAmount && maxAmount < limit) {\r\n                limit = maxAmount;\r\n            }\r\n            let offset = 0;\r\n            let resp;\r\n            for (;;) {\r\n                let urlWithPagination = this.addQueryParam(url, 'limit', limit);\r\n                urlWithPagination = this.addQueryParam(urlWithPagination, 'offset', offset);\r\n                const e = yield this.get(urlWithPagination, config);\r\n                if (!resp) {\r\n                    resp = e;\r\n                }\r\n                else {\r\n                    resp.data = resp.data.concat(e.data);\r\n                    resp.pagination.limit += e.data.length;\r\n                }\r\n                if (e.data.length < limit || (!!maxAmount && resp.data.length >= maxAmount)) {\r\n                    break;\r\n                }\r\n                else {\r\n                    offset += limit;\r\n                }\r\n                if (!!maxAmount) {\r\n                    if (maxAmount < resp.data.length + limit) {\r\n                        limit = maxAmount - resp.data.length;\r\n                    }\r\n                }\r\n            }\r\n            return resp;\r\n        });\r\n    }\r\n    //Http overrides\r\n    get(url, config) {\r\n        return this.retryService.executeAsyncFunc(() => this.httpClient.get(url, config));\r\n    }\r\n    delete(url, config) {\r\n        return this.retryService.executeAsyncFunc(() => this.httpClient.delete(url, config));\r\n    }\r\n    head(url, config) {\r\n        return this.retryService.executeAsyncFunc(() => this.httpClient.head(url, config));\r\n    }\r\n    post(url, data, config) {\r\n        return this.retryService.executeAsyncFunc(() => this.httpClient.post(url, data, config));\r\n    }\r\n    put(url, data, config) {\r\n        return this.retryService.executeAsyncFunc(() => this.httpClient.put(url, data, config));\r\n    }\r\n    patch(url, data, config) {\r\n        return this.retryService.executeAsyncFunc(() => this.httpClient.patch(url, data, config));\r\n    }\r\n}\r\nexports.CrowdinApi = CrowdinApi;\r\nCrowdinApi.CROWDIN_URL_SUFFIX = 'api.crowdin.com/api/v2';\r\nCrowdinApi.AXIOS_INSTANCE = new axiosProvider_1.AxisProvider().axios;\r\nCrowdinApi.FETCH_INSTANCE = new fetchClient_1.FetchClient();\r\n"]},"metadata":{},"sourceType":"script"}
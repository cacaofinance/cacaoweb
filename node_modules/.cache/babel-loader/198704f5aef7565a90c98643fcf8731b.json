{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  data: []\n};\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state, action) => {\n      const {\n        payload\n      } = action;\n      const toastIndex = state.data.findIndex(toast => toast.id === action.payload.id); // If id already matches remove it before adding it to the top of the stack\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1);\n      }\n\n      state.data.unshift(payload);\n    },\n    remove: (state, action) => {\n      const toastIndex = state.data.findIndex(toast => toast.id === action.payload);\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1);\n      }\n    },\n    clear: state => {\n      state.data = [];\n    }\n  }\n}); // Actions\n\nexport const {\n  clear,\n  remove,\n  push\n} = toastsSlice.actions;\nexport default toastsSlice.reducer;","map":{"version":3,"sources":["C:/PROYECTOS/SVY/svy final/Sviolence-frontend/src/state/toasts/index.ts"],"names":["createSlice","initialState","data","toastsSlice","name","reducers","push","state","action","payload","toastIndex","findIndex","toast","id","splice","unshift","remove","clear","actions","reducer"],"mappings":"AAAA;AAEA,SAASA,WAAT,QAA2C,kBAA3C;AAGA,MAAMC,YAAyB,GAAG;AAChCC,EAAAA,IAAI,EAAE;AAD0B,CAAlC;AAIA,OAAO,MAAMC,WAAW,GAAGH,WAAW,CAAC;AACrCI,EAAAA,IAAI,EAAE,QAD+B;AAErCH,EAAAA,YAFqC;AAGrCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE,CAACC,KAAD,EAAqBC,MAArB,KAAsD;AAC1D,YAAM;AAAEC,QAAAA;AAAF,UAAcD,MAApB;AACA,YAAME,UAAU,GAAGH,KAAK,CAACL,IAAN,CAAWS,SAAX,CAAsBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACC,OAAP,CAAeI,EAA5D,CAAnB,CAF0D,CAI1D;;AACA,UAAIH,UAAU,IAAI,CAAlB,EAAqB;AACnBH,QAAAA,KAAK,CAACL,IAAN,CAAWY,MAAX,CAAkBJ,UAAlB,EAA8B,CAA9B;AACD;;AAEDH,MAAAA,KAAK,CAACL,IAAN,CAAWa,OAAX,CAAmBN,OAAnB;AACD,KAXO;AAYRO,IAAAA,MAAM,EAAE,CAACT,KAAD,EAAqBC,MAArB,KAAuD;AAC7D,YAAME,UAAU,GAAGH,KAAK,CAACL,IAAN,CAAWS,SAAX,CAAsBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaL,MAAM,CAACC,OAApD,CAAnB;;AAEA,UAAIC,UAAU,IAAI,CAAlB,EAAqB;AACnBH,QAAAA,KAAK,CAACL,IAAN,CAAWY,MAAX,CAAkBJ,UAAlB,EAA8B,CAA9B;AACD;AACF,KAlBO;AAmBRO,IAAAA,KAAK,EAAGV,KAAD,IAAwB;AAC7BA,MAAAA,KAAK,CAACL,IAAN,GAAa,EAAb;AACD;AArBO;AAH2B,CAAD,CAA/B,C,CA4BP;;AACA,OAAO,MAAM;AAAEe,EAAAA,KAAF;AAASD,EAAAA,MAAT;AAAiBV,EAAAA;AAAjB,IAA0BH,WAAW,CAACe,OAA5C;AAEP,eAAef,WAAW,CAACgB,OAA3B","sourcesContent":["/* eslint-disable no-param-reassign */\r\nimport { Toast } from '@pancakeswap-libs/uikit'\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ToastsState } from '../types'\r\n\r\nconst initialState: ToastsState = {\r\n  data: [],\r\n}\r\n\r\nexport const toastsSlice = createSlice({\r\n  name: 'toasts',\r\n  initialState,\r\n  reducers: {\r\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\r\n      const { payload } = action\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\r\n\r\n      // If id already matches remove it before adding it to the top of the stack\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n\r\n      state.data.unshift(payload)\r\n    },\r\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\r\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\r\n\r\n      if (toastIndex >= 0) {\r\n        state.data.splice(toastIndex, 1)\r\n      }\r\n    },\r\n    clear: (state: ToastsState) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { clear, remove, push } = toastsSlice.actions\r\n\r\nexport default toastsSlice.reducer\r\n"]},"metadata":{},"sourceType":"module"}
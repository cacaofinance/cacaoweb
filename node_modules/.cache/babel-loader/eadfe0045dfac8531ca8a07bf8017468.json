{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Matias/Downloads/new/svy.finance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/Matias/Downloads/new/svy.finance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:/Users/Matias/Downloads/new/svy.finance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/Matias/Downloads/new/svy.finance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IssuesModel = exports.Issues = void 0;\n\nvar core_1 = require(\"../core\");\n/**\r\n * @deprecated\r\n */\n\n\nvar Issues = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(Issues, _core_1$CrowdinApi);\n\n  var _super = _createSuper(Issues);\n\n  function Issues() {\n    _classCallCheck(this, Issues);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Issues, [{\n    key: \"listReportedIssues\",\n    value:\n    /**\r\n     * @param projectId project identifier\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     * @param type defines the issue type\r\n     * @param status defines the issue resolution status\r\n     */\n    function listReportedIssues(projectId, limit, offset, type, status) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/issues\");\n      url = this.addQueryParam(url, 'type', type);\n      url = this.addQueryParam(url, 'status', status);\n      return this.getList(url, limit, offset);\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param issueId issue identifier\r\n     * @param request request body\r\n     */\n\n  }, {\n    key: \"editIssue\",\n    value: function editIssue(projectId, issueId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/issues/\").concat(issueId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n  }]);\n\n  return Issues;\n}(core_1.CrowdinApi);\n\nexports.Issues = Issues;\n/**\r\n * @deprecated\r\n */\n\nvar IssuesModel;\n\n(function (IssuesModel) {\n  var Type;\n\n  (function (Type) {\n    Type[\"ALL\"] = \"all\";\n    Type[\"GENERAL_QUESTION\"] = \"general_question\";\n    Type[\"TRANSLATION_MISTAKE\"] = \"translation_mistake\";\n    Type[\"CONTEXT_REQUEST\"] = \"context_request\";\n    Type[\"SOURCE_MISTAKE\"] = \"source_mistake\";\n  })(Type = IssuesModel.Type || (IssuesModel.Type = {}));\n\n  var Status;\n\n  (function (Status) {\n    Status[\"ALL\"] = \"all\";\n    Status[\"RESOLVED\"] = \"resolved\";\n    Status[\"UNRESOLVED\"] = \"unresolved\";\n  })(Status = IssuesModel.Status || (IssuesModel.Status = {}));\n})(IssuesModel = exports.IssuesModel || (exports.IssuesModel = {}));","map":{"version":3,"sources":["C:/Users/Matias/Downloads/new/svy.finance/node_modules/@crowdin/crowdin-api-client/out/issues/index.js"],"names":["Object","defineProperty","exports","value","IssuesModel","Issues","core_1","require","projectId","limit","offset","type","status","url","addQueryParam","getList","issueId","request","patch","defaultConfig","CrowdinApi","Type","Status"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,WAAR,GAAsBF,OAAO,CAACG,MAAR,GAAiB,KAAK,CAA5C;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;AACA;AACA;AACA;;;IACMF,M;;;;;;;;;;;;;;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,gCAAmBG,SAAnB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6CC,IAA7C,EAAmDC,MAAnD,EAA2D;AACvD,UAAIC,GAAG,aAAM,KAAKA,GAAX,uBAA2BL,SAA3B,YAAP;AACAK,MAAAA,GAAG,GAAG,KAAKC,aAAL,CAAmBD,GAAnB,EAAwB,MAAxB,EAAgCF,IAAhC,CAAN;AACAE,MAAAA,GAAG,GAAG,KAAKC,aAAL,CAAmBD,GAAnB,EAAwB,QAAxB,EAAkCD,MAAlC,CAAN;AACA,aAAO,KAAKG,OAAL,CAAaF,GAAb,EAAkBJ,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,mBAAUF,SAAV,EAAqBQ,OAArB,EAA8BC,OAA9B,EAAuC;AACnC,UAAMJ,GAAG,aAAM,KAAKA,GAAX,uBAA2BL,SAA3B,qBAA+CQ,OAA/C,CAAT;AACA,aAAO,KAAKE,KAAL,CAAWL,GAAX,EAAgBI,OAAhB,EAAyB,KAAKE,aAAL,EAAzB,CAAP;AACH;;;;EAtBgBb,MAAM,CAACc,U;;AAwB5BlB,OAAO,CAACG,MAAR,GAAiBA,MAAjB;AACA;AACA;AACA;;AACA,IAAID,WAAJ;;AACA,CAAC,UAAUA,WAAV,EAAuB;AACpB,MAAIiB,IAAJ;;AACA,GAAC,UAAUA,IAAV,EAAgB;AACbA,IAAAA,IAAI,CAAC,KAAD,CAAJ,GAAc,KAAd;AACAA,IAAAA,IAAI,CAAC,kBAAD,CAAJ,GAA2B,kBAA3B;AACAA,IAAAA,IAAI,CAAC,qBAAD,CAAJ,GAA8B,qBAA9B;AACAA,IAAAA,IAAI,CAAC,iBAAD,CAAJ,GAA0B,iBAA1B;AACAA,IAAAA,IAAI,CAAC,gBAAD,CAAJ,GAAyB,gBAAzB;AACH,GAND,EAMGA,IAAI,GAAGjB,WAAW,CAACiB,IAAZ,KAAqBjB,WAAW,CAACiB,IAAZ,GAAmB,EAAxC,CANV;;AAOA,MAAIC,MAAJ;;AACA,GAAC,UAAUA,MAAV,EAAkB;AACfA,IAAAA,MAAM,CAAC,KAAD,CAAN,GAAgB,KAAhB;AACAA,IAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,UAArB;AACAA,IAAAA,MAAM,CAAC,YAAD,CAAN,GAAuB,YAAvB;AACH,GAJD,EAIGA,MAAM,GAAGlB,WAAW,CAACkB,MAAZ,KAAuBlB,WAAW,CAACkB,MAAZ,GAAqB,EAA5C,CAJZ;AAKH,CAfD,EAeGlB,WAAW,GAAGF,OAAO,CAACE,WAAR,KAAwBF,OAAO,CAACE,WAAR,GAAsB,EAA9C,CAfjB","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.IssuesModel = exports.Issues = void 0;\r\nconst core_1 = require(\"../core\");\r\n/**\r\n * @deprecated\r\n */\r\nclass Issues extends core_1.CrowdinApi {\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     * @param type defines the issue type\r\n     * @param status defines the issue resolution status\r\n     */\r\n    listReportedIssues(projectId, limit, offset, type, status) {\r\n        let url = `${this.url}/projects/${projectId}/issues`;\r\n        url = this.addQueryParam(url, 'type', type);\r\n        url = this.addQueryParam(url, 'status', status);\r\n        return this.getList(url, limit, offset);\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param issueId issue identifier\r\n     * @param request request body\r\n     */\r\n    editIssue(projectId, issueId, request) {\r\n        const url = `${this.url}/projects/${projectId}/issues/${issueId}`;\r\n        return this.patch(url, request, this.defaultConfig());\r\n    }\r\n}\r\nexports.Issues = Issues;\r\n/**\r\n * @deprecated\r\n */\r\nvar IssuesModel;\r\n(function (IssuesModel) {\r\n    let Type;\r\n    (function (Type) {\r\n        Type[\"ALL\"] = \"all\";\r\n        Type[\"GENERAL_QUESTION\"] = \"general_question\";\r\n        Type[\"TRANSLATION_MISTAKE\"] = \"translation_mistake\";\r\n        Type[\"CONTEXT_REQUEST\"] = \"context_request\";\r\n        Type[\"SOURCE_MISTAKE\"] = \"source_mistake\";\r\n    })(Type = IssuesModel.Type || (IssuesModel.Type = {}));\r\n    let Status;\r\n    (function (Status) {\r\n        Status[\"ALL\"] = \"all\";\r\n        Status[\"RESOLVED\"] = \"resolved\";\r\n        Status[\"UNRESOLVED\"] = \"unresolved\";\r\n    })(Status = IssuesModel.Status || (IssuesModel.Status = {}));\r\n})(IssuesModel = exports.IssuesModel || (exports.IssuesModel = {}));\r\n"]},"metadata":{},"sourceType":"script"}
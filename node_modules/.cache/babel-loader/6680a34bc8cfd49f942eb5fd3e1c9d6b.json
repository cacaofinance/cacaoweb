{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.browserSha512 = exports.browserSha256 = exports.browserHmacSha512Sign = exports.browserHmacSha256Sign = exports.browserAesDecrypt = exports.browserAesEncrypt = exports.browserImportKey = exports.browserExportKey = exports.getOps = exports.getAlgo = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;\n\nconst constants_1 = require(\"../constants\");\n\nfunction getBrowerCrypto() {\n  return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};\n}\n\nexports.getBrowerCrypto = getBrowerCrypto;\n\nfunction getSubtleCrypto() {\n  const browserCrypto = getBrowerCrypto();\n  return browserCrypto.subtle || browserCrypto.webkitSubtle;\n}\n\nexports.getSubtleCrypto = getSubtleCrypto;\n\nfunction getAlgo(type) {\n  return type === constants_1.AES_BROWSER_ALGO ? {\n    length: constants_1.AES_LENGTH,\n    name: constants_1.AES_BROWSER_ALGO\n  } : {\n    hash: {\n      name: constants_1.HMAC_BROWSER_ALGO\n    },\n    name: constants_1.HMAC_BROWSER\n  };\n}\n\nexports.getAlgo = getAlgo;\n\nfunction getOps(type) {\n  return type === constants_1.AES_BROWSER_ALGO ? [constants_1.ENCRYPT_OP, constants_1.DECRYPT_OP] : [constants_1.SIGN_OP, constants_1.VERIFY_OP];\n}\n\nexports.getOps = getOps;\n\nfunction browserExportKey(cryptoKey, type = constants_1.AES_BROWSER_ALGO) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const subtle = getSubtleCrypto();\n    return new Uint8Array(yield subtle.exportKey('raw', cryptoKey));\n  });\n}\n\nexports.browserExportKey = browserExportKey;\n\nfunction browserImportKey(buffer, type = constants_1.AES_BROWSER_ALGO) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return getSubtleCrypto().importKey('raw', buffer, getAlgo(type), true, getOps(type));\n  });\n}\n\nexports.browserImportKey = browserImportKey;\n\nfunction browserAesEncrypt(iv, key, data) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const subtle = getSubtleCrypto();\n    const cryptoKey = yield browserImportKey(key, constants_1.AES_BROWSER_ALGO);\n    const result = yield subtle.encrypt({\n      iv,\n      name: constants_1.AES_BROWSER_ALGO\n    }, cryptoKey, data);\n    return new Uint8Array(result);\n  });\n}\n\nexports.browserAesEncrypt = browserAesEncrypt;\n\nfunction browserAesDecrypt(iv, key, data) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const subtle = getSubtleCrypto();\n    const cryptoKey = yield browserImportKey(key, constants_1.AES_BROWSER_ALGO);\n    const result = yield subtle.decrypt({\n      iv,\n      name: constants_1.AES_BROWSER_ALGO\n    }, cryptoKey, data);\n    return new Uint8Array(result);\n  });\n}\n\nexports.browserAesDecrypt = browserAesDecrypt;\n\nfunction browserHmacSha256Sign(key, data) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const subtle = getSubtleCrypto();\n    const cryptoKey = yield browserImportKey(key, constants_1.HMAC_BROWSER);\n    const signature = yield subtle.sign({\n      length: constants_1.HMAC_LENGTH,\n      name: constants_1.HMAC_BROWSER\n    }, cryptoKey, data);\n    return new Uint8Array(signature);\n  });\n}\n\nexports.browserHmacSha256Sign = browserHmacSha256Sign;\n\nfunction browserHmacSha512Sign(key, data) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const subtle = getSubtleCrypto();\n    const cryptoKey = yield browserImportKey(key, constants_1.HMAC_BROWSER);\n    const signature = yield subtle.sign({\n      length: constants_1.LENGTH_512,\n      name: constants_1.HMAC_BROWSER\n    }, cryptoKey, data);\n    return new Uint8Array(signature);\n  });\n}\n\nexports.browserHmacSha512Sign = browserHmacSha512Sign;\n\nfunction browserSha256(data) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const subtle = getSubtleCrypto();\n    const result = yield subtle.digest({\n      name: constants_1.SHA256_BROWSER_ALGO\n    }, data);\n    return new Uint8Array(result);\n  });\n}\n\nexports.browserSha256 = browserSha256;\n\nfunction browserSha512(data) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const subtle = getSubtleCrypto();\n    const result = yield subtle.digest({\n      name: constants_1.SHA512_BROWSER_ALGO\n    }, data);\n    return new Uint8Array(result);\n  });\n}\n\nexports.browserSha512 = browserSha512;","map":{"version":3,"sources":["../../../../src/helpers/env/browser.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.browserSha512 = exports.browserSha256 = exports.browserHmacSha512Sign = exports.browserHmacSha256Sign = exports.browserAesDecrypt = exports.browserAesEncrypt = exports.browserImportKey = exports.browserExportKey = exports.getOps = exports.getAlgo = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;\r\nconst constants_1 = require(\"../constants\");\r\nfunction getBrowerCrypto() {\r\n    return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};\r\n}\r\nexports.getBrowerCrypto = getBrowerCrypto;\r\nfunction getSubtleCrypto() {\r\n    const browserCrypto = getBrowerCrypto();\r\n    return browserCrypto.subtle || browserCrypto.webkitSubtle;\r\n}\r\nexports.getSubtleCrypto = getSubtleCrypto;\r\nfunction getAlgo(type) {\r\n    return type === constants_1.AES_BROWSER_ALGO\r\n        ? { length: constants_1.AES_LENGTH, name: constants_1.AES_BROWSER_ALGO }\r\n        : {\r\n            hash: { name: constants_1.HMAC_BROWSER_ALGO },\r\n            name: constants_1.HMAC_BROWSER,\r\n        };\r\n}\r\nexports.getAlgo = getAlgo;\r\nfunction getOps(type) {\r\n    return type === constants_1.AES_BROWSER_ALGO\r\n        ? [constants_1.ENCRYPT_OP, constants_1.DECRYPT_OP]\r\n        : [constants_1.SIGN_OP, constants_1.VERIFY_OP];\r\n}\r\nexports.getOps = getOps;\r\nfunction browserExportKey(cryptoKey, type = constants_1.AES_BROWSER_ALGO) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const subtle = getSubtleCrypto();\r\n        return new Uint8Array(yield subtle.exportKey('raw', cryptoKey));\r\n    });\r\n}\r\nexports.browserExportKey = browserExportKey;\r\nfunction browserImportKey(buffer, type = constants_1.AES_BROWSER_ALGO) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return getSubtleCrypto().importKey('raw', buffer, getAlgo(type), true, getOps(type));\r\n    });\r\n}\r\nexports.browserImportKey = browserImportKey;\r\nfunction browserAesEncrypt(iv, key, data) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const subtle = getSubtleCrypto();\r\n        const cryptoKey = yield browserImportKey(key, constants_1.AES_BROWSER_ALGO);\r\n        const result = yield subtle.encrypt({\r\n            iv,\r\n            name: constants_1.AES_BROWSER_ALGO,\r\n        }, cryptoKey, data);\r\n        return new Uint8Array(result);\r\n    });\r\n}\r\nexports.browserAesEncrypt = browserAesEncrypt;\r\nfunction browserAesDecrypt(iv, key, data) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const subtle = getSubtleCrypto();\r\n        const cryptoKey = yield browserImportKey(key, constants_1.AES_BROWSER_ALGO);\r\n        const result = yield subtle.decrypt({\r\n            iv,\r\n            name: constants_1.AES_BROWSER_ALGO,\r\n        }, cryptoKey, data);\r\n        return new Uint8Array(result);\r\n    });\r\n}\r\nexports.browserAesDecrypt = browserAesDecrypt;\r\nfunction browserHmacSha256Sign(key, data) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const subtle = getSubtleCrypto();\r\n        const cryptoKey = yield browserImportKey(key, constants_1.HMAC_BROWSER);\r\n        const signature = yield subtle.sign({\r\n            length: constants_1.HMAC_LENGTH,\r\n            name: constants_1.HMAC_BROWSER,\r\n        }, cryptoKey, data);\r\n        return new Uint8Array(signature);\r\n    });\r\n}\r\nexports.browserHmacSha256Sign = browserHmacSha256Sign;\r\nfunction browserHmacSha512Sign(key, data) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const subtle = getSubtleCrypto();\r\n        const cryptoKey = yield browserImportKey(key, constants_1.HMAC_BROWSER);\r\n        const signature = yield subtle.sign({\r\n            length: constants_1.LENGTH_512,\r\n            name: constants_1.HMAC_BROWSER,\r\n        }, cryptoKey, data);\r\n        return new Uint8Array(signature);\r\n    });\r\n}\r\nexports.browserHmacSha512Sign = browserHmacSha512Sign;\r\nfunction browserSha256(data) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const subtle = getSubtleCrypto();\r\n        const result = yield subtle.digest({\r\n            name: constants_1.SHA256_BROWSER_ALGO,\r\n        }, data);\r\n        return new Uint8Array(result);\r\n    });\r\n}\r\nexports.browserSha256 = browserSha256;\r\nfunction browserSha512(data) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const subtle = getSubtleCrypto();\r\n        const result = yield subtle.digest({\r\n            name: constants_1.SHA512_BROWSER_ALGO,\r\n        }, data);\r\n        return new Uint8Array(result);\r\n    });\r\n}\r\nexports.browserSha512 = browserSha512;\r\n//# sourceMappingURL=browser.js.map"]},"metadata":{},"sourceType":"script"}
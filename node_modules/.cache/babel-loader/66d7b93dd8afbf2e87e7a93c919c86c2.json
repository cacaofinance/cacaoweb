{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROYECTOS\\\\svy.finance\\\\src\\\\views\\\\Farms\\\\Farms.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport BigNumber from 'bignumber.js';\nimport { useWeb3React } from '@web3-react/core';\nimport { Image, Heading } from '@pancakeswap-libs/uikit';\nimport styled from 'styled-components';\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config';\nimport FlexLayout from 'components/layout/Flex';\nimport Page from 'components/layout/Page';\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd, usePriceEthBusd } from 'state/hooks';\nimport useRefresh from 'hooks/useRefresh';\nimport { fetchFarmUserDataAsync } from 'state/actions';\nimport { QuoteToken } from 'config/constants/types';\nimport useI18n from 'hooks/useI18n';\nimport { orderBy } from 'lodash';\nimport FarmCard from './components/FarmCard/FarmCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`;\n_c = StyledImage;\nconst Header = styled.div`\n  padding: 32px 0px;\n  background: ${({\n  theme\n}) => theme.colors.gradients.bubblegum};\n\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`;\n_c2 = Header;\n\nconst Farms = () => {\n  _s();\n\n  const {\n    path\n  } = useRouteMatch();\n  const {\n    pathname\n  } = useLocation();\n  const TranslateString = useI18n();\n  const farmsLP = useFarms();\n  const cakePrice = usePriceCakeBusd();\n  const bnbPrice = usePriceBnbBusd();\n  const [query] = useState('');\n  const ethPriceUsd = usePriceEthBusd();\n  const {\n    account\n  } = useWeb3React();\n  const [sortOption] = useState('hot');\n  const dispatch = useDispatch();\n  const {\n    fastRefresh\n  } = useRefresh();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n  const [stackedOnly] = useState(false);\n  const activeFarms = farmsLP.filter(farm => farm.pid !== 0 && farm.multiplier !== '0X');\n  const inactiveFarms = farmsLP.filter(farm => farm.pid !== 0 && farm.multiplier === '0X');\n  const stackedOnlyFarms = activeFarms.filter(farm => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0));\n\n  const sortFarms = farms => {\n    switch (sortOption) {\n      case 'apr':\n        return orderBy(farms, 'apy', 'desc');\n\n      case 'multiplier':\n        return orderBy(farms, farm => Number(farm.multiplier.slice(0, -1)), 'desc');\n\n      case 'earned':\n        return orderBy(farms, farm => farm.userData ? farm.userData.earnings : 0, 'desc');\n\n      case 'liquidity':\n        return orderBy(farms, farm => Number(farm.liquidity), 'desc');\n\n      default:\n        return farms;\n    }\n  }; // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n\n\n  const farmsList = useCallback(farmsToDisplay => {\n    var _farmsLP$find;\n\n    const cakePriceVsBNB = new BigNumber(((_farmsLP$find = farmsLP.find(farm => farm.pid === CAKE_POOL_PID)) === null || _farmsLP$find === void 0 ? void 0 : _farmsLP$find.tokenPriceVsQuote) || 0);\n    let farmsToDisplayWithAPY = farmsToDisplay.map(farm => {\n      if (!farm.tokenAmount || !farm.lpTotalInQuoteToken) {\n        return farm;\n      }\n\n      const cakeRewardPerBlock = CAKE_PER_BLOCK.times(farm.poolWeight);\n      const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR); // cakePriceInQuote * cakeRewardPerYear / lpTotalInQuoteToken\n\n      let apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken);\n\n      if (farm.quoteTokenSymbol === QuoteToken.BUSD || farm.quoteTokenSymbol === QuoteToken.UST) {\n        apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken).times(bnbPrice);\n      } else if (farm.quoteTokenSymbol === QuoteToken.ETH) {\n        apy = cakePrice.div(ethPriceUsd).times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken);\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        apy = cakeRewardPerYear.div(farm.lpTotalInQuoteToken);\n      } else if (farm.dual) {\n        const cakeApy = farm && cakePriceVsBNB.times(cakeRewardPerBlock).times(BLOCKS_PER_YEAR).div(farm.lpTotalInQuoteToken);\n        const dualApy = farm.tokenPriceVsQuote && new BigNumber(farm.tokenPriceVsQuote).times(farm.dual.rewardPerBlock).times(BLOCKS_PER_YEAR).div(farm.lpTotalInQuoteToken);\n        apy = cakeApy && dualApy && cakeApy.plus(dualApy);\n      }\n\n      let liquidity = farm.lpTotalInQuoteToken;\n\n      if (!farm.lpTotalInQuoteToken) {\n        liquidity = null;\n      }\n\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        liquidity = bnbPrice.times(farm.lpTotalInQuoteToken);\n      }\n\n      if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        liquidity = cakePrice.times(farm.lpTotalInQuoteToken);\n      }\n\n      if (farm.quoteTokenSymbol === QuoteToken.ETH) {\n        liquidity = ethPriceUsd.times(farm.lpTotalInQuoteToken);\n      }\n\n      return { ...farm,\n        apy,\n        liquidity\n      };\n    });\n\n    if (query) {\n      const lowercaseQuery = query.toLowerCase();\n      farmsToDisplayWithAPY = farmsToDisplayWithAPY.filter(farm => {\n        if (farm.lpSymbol.toLowerCase().includes(lowercaseQuery)) {\n          return true;\n        }\n\n        return false;\n      });\n    }\n\n    return farmsToDisplayWithAPY;\n  }, [bnbPrice, farmsLP, query, cakePrice, ethPriceUsd]);\n  const isActive = !pathname.includes('history');\n  let farmsStaked = [];\n\n  if (isActive) {\n    farmsStaked = stackedOnly ? farmsList(stackedOnlyFarms) : farmsList(activeFarms);\n  } else {\n    farmsStaked = farmsList(inactiveFarms);\n  }\n\n  farmsStaked = sortFarms(farmsStaked);\n\n  const renderContent = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FlexLayout, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `${path}`,\n          children: farmsStaked.map(farm => farm.pid !== 3 && farm.pid !== 4 ? /*#__PURE__*/_jsxDEV(FarmCard, {\n            farm: farm,\n            bnbPrice: bnbPrice,\n            cakePrice: cakePrice,\n            ethPrice: ethPriceUsd,\n            account: account,\n            removed: false\n          }, farm.pid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        as: \"h1\",\n        size: \"xxl\",\n        color: \"primary\",\n        mb: \"24px\",\n        children: TranslateString(999, 'Farms')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        size: \"lg\",\n        color: \"primary\",\n        children: TranslateString(999, 'Stake Liquidity Pool (LP) tokens to earn.')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Page, {\n      children: [renderContent(), /*#__PURE__*/_jsxDEV(StyledImage, {\n        src: \"/images/3dpan.png\",\n        alt: \"Pancake illustration\",\n        width: 120,\n        height: 103\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Farms, \"UIYkOsfskvrcnHX5ZmQk8YpF2nc=\", false, function () {\n  return [useRouteMatch, useLocation, useI18n, useFarms, usePriceCakeBusd, usePriceBnbBusd, usePriceEthBusd, useWeb3React, useDispatch, useRefresh];\n});\n\n_c3 = Farms;\nexport default Farms;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledImage\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Farms\");","map":{"version":3,"sources":["C:/PROYECTOS/svy.finance/src/views/Farms/Farms.tsx"],"names":["React","useEffect","useCallback","useState","Route","useRouteMatch","useLocation","useDispatch","BigNumber","useWeb3React","Image","Heading","styled","BLOCKS_PER_YEAR","CAKE_PER_BLOCK","CAKE_POOL_PID","FlexLayout","Page","useFarms","usePriceBnbBusd","usePriceCakeBusd","usePriceEthBusd","useRefresh","fetchFarmUserDataAsync","QuoteToken","useI18n","orderBy","FarmCard","StyledImage","Header","div","theme","colors","gradients","bubblegum","mediaQueries","sm","Farms","path","pathname","TranslateString","farmsLP","cakePrice","bnbPrice","query","ethPriceUsd","account","sortOption","dispatch","fastRefresh","stackedOnly","activeFarms","filter","farm","pid","multiplier","inactiveFarms","stackedOnlyFarms","userData","stakedBalance","isGreaterThan","sortFarms","farms","Number","slice","earnings","liquidity","farmsList","farmsToDisplay","cakePriceVsBNB","find","tokenPriceVsQuote","farmsToDisplayWithAPY","map","tokenAmount","lpTotalInQuoteToken","cakeRewardPerBlock","times","poolWeight","cakeRewardPerYear","apy","quoteTokenSymbol","BUSD","UST","ETH","CAKE","dual","cakeApy","dualApy","rewardPerBlock","plus","BNB","lowercaseQuery","toLowerCase","lpSymbol","includes","isActive","farmsStaked","renderContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react'\r\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd, usePriceEthBusd } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { orderBy } from 'lodash'\r\n\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\n\r\n\r\nconst StyledImage = styled(Image)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: 58px;\r\n`\r\n\r\nconst Header = styled.div`\r\n  padding: 32px 0px;\r\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\r\n\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const { pathname } = useLocation()\r\n  const TranslateString = useI18n()\r\n  const farmsLP = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const bnbPrice = usePriceBnbBusd()\r\n  const [query ] = useState('')\r\n  const ethPriceUsd = usePriceEthBusd()\r\n  const { account } = useWeb3React()\r\n  const [sortOption ] = useState('hot')\r\n\r\n  const dispatch = useDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const [stackedOnly] = useState(false)\r\n\r\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\r\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X')\r\n\r\n  const stackedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\r\n    switch (sortOption) {\r\n      case 'apr':\r\n        return orderBy(farms, 'apy', 'desc')\r\n      case 'multiplier':\r\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.multiplier.slice(0, -1)), 'desc')\r\n      case 'earned':\r\n        return orderBy(farms, (farm: FarmWithStakedValue) => (farm.userData ? farm.userData.earnings : 0), 'desc')\r\n      case 'liquidity':\r\n        return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\r\n      default:\r\n        return farms\r\n    }\r\n  }\r\n\r\n  // /!\\ This function will be removed soon\r\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\r\n  // to retrieve assets prices against USD\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay): FarmWithStakedValue[] => {\r\n      const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\r\n      let farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        if (!farm.tokenAmount || !farm.lpTotalInQuoteToken) {\r\n          return farm\r\n        }\r\n        const cakeRewardPerBlock = CAKE_PER_BLOCK.times(farm.poolWeight)\r\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\r\n\r\n        // cakePriceInQuote * cakeRewardPerYear / lpTotalInQuoteToken\r\n        let apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken)\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.BUSD || farm.quoteTokenSymbol === QuoteToken.UST) {\r\n          apy = cakePriceVsBNB.times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken).times(bnbPrice)\r\n        } else if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n          apy = cakePrice.div(ethPriceUsd).times(cakeRewardPerYear).div(farm.lpTotalInQuoteToken)\r\n        } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n          apy = cakeRewardPerYear.div(farm.lpTotalInQuoteToken)\r\n        } else if (farm.dual) {\r\n          const cakeApy =\r\n            farm && cakePriceVsBNB.times(cakeRewardPerBlock).times(BLOCKS_PER_YEAR).div(farm.lpTotalInQuoteToken)\r\n          const dualApy =\r\n            farm.tokenPriceVsQuote &&\r\n            new BigNumber(farm.tokenPriceVsQuote)\r\n              .times(farm.dual.rewardPerBlock)\r\n              .times(BLOCKS_PER_YEAR)\r\n              .div(farm.lpTotalInQuoteToken)\r\n\r\n          apy = cakeApy && dualApy && cakeApy.plus(dualApy)\r\n        }\r\n\r\n        let liquidity = farm.lpTotalInQuoteToken\r\n\r\n        if (!farm.lpTotalInQuoteToken) {\r\n          liquidity = null\r\n        }\r\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n          liquidity = bnbPrice.times(farm.lpTotalInQuoteToken)\r\n        }\r\n        if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n          liquidity = cakePrice.times(farm.lpTotalInQuoteToken)\r\n        }\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.ETH) {\r\n          liquidity = ethPriceUsd.times(farm.lpTotalInQuoteToken)\r\n        }\r\n\r\n        return { ...farm, apy, liquidity }\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = query.toLowerCase()\r\n        farmsToDisplayWithAPY = farmsToDisplayWithAPY.filter((farm: FarmWithStakedValue) => {\r\n          if (farm.lpSymbol.toLowerCase().includes(lowercaseQuery)) {\r\n            return true\r\n          }\r\n\r\n          return false\r\n        })\r\n      }\r\n      return farmsToDisplayWithAPY\r\n    },\r\n    [bnbPrice, farmsLP, query, cakePrice, ethPriceUsd],\r\n  )\r\n\r\n  const isActive = !pathname.includes('history')\r\n  let farmsStaked = []\r\n  if (isActive) {\r\n    farmsStaked = stackedOnly ? farmsList(stackedOnlyFarms) : farmsList(activeFarms)\r\n  } else {\r\n    farmsStaked = farmsList(inactiveFarms)\r\n  }\r\n\r\n  farmsStaked = sortFarms(farmsStaked)\r\n\r\n\r\n  const renderContent = (): JSX.Element => {\r\n\r\n    return (\r\n      <div>\r\n        <FlexLayout>\r\n          <Route exact path={`${path}`}>\r\n            {farmsStaked.map((farm) => (farm.pid !== 3 && farm.pid !== 4 ?\r\n              <FarmCard\r\n                key={farm.pid}\r\n                farm={farm}\r\n                bnbPrice={bnbPrice}\r\n                cakePrice={cakePrice}\r\n                ethPrice={ethPriceUsd}\r\n                account={account}\r\n                removed={false}\r\n              />:<></>\r\n            ))}\r\n          </Route>\r\n        </FlexLayout>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Heading as=\"h1\" size=\"xxl\" color=\"primary\" mb=\"24px\">\r\n          {TranslateString(999, 'Farms')}\r\n        </Heading>\r\n        <Heading size=\"lg\" color=\"primary\">\r\n          {TranslateString(999, 'Stake Liquidity Pool (LP) tokens to earn.')}\r\n        </Heading>\r\n      </Header>\r\n      <Page>\r\n        \r\n        {renderContent()}\r\n        <StyledImage src=\"/images/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} />\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Matias/Downloads/svy final/SPreace-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Matias/Downloads/svy final/SPreace-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:/Users/Matias/Downloads/svy final/SPreace-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/Matias/Downloads/svy final/SPreace-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";/* eslint-disable no-param-reassign */import{createSlice}from'@reduxjs/toolkit';import teamsList from'config/constants/teams';import{getTeam,getTeams}from'./helpers';var teamsById=teamsList.reduce(function(accum,team){return _objectSpread(_objectSpread({},accum),{},_defineProperty({},team.id,team));},{});var initialState={isInitialized:false,isLoading:true,data:teamsById};export var teamsSlice=createSlice({name:'teams',initialState:initialState,reducers:{fetchStart:function fetchStart(state){state.isLoading=true;},fetchFailed:function fetchFailed(state){state.isLoading=false;state.isInitialized=true;},teamFetchSucceeded:function teamFetchSucceeded(state,action){state.isInitialized=true;state.isLoading=false;state.data[action.payload.id]=action.payload;},teamsFetchSucceeded:function teamsFetchSucceeded(state,action){state.isInitialized=true;state.isLoading=false;state.data=action.payload;}}});// Actions\nvar _teamsSlice$actions=teamsSlice.actions,fetchStart=_teamsSlice$actions.fetchStart,teamFetchSucceeded=_teamsSlice$actions.teamFetchSucceeded,fetchFailed=_teamsSlice$actions.fetchFailed,teamsFetchSucceeded=_teamsSlice$actions.teamsFetchSucceeded;// Thunks\nexport{fetchStart,teamFetchSucceeded,fetchFailed,teamsFetchSucceeded};export var fetchTeam=function fetchTeam(teamId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var team;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch(fetchStart());_context.next=4;return getTeam(teamId);case 4:team=_context.sent;dispatch(teamFetchSucceeded(team));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);dispatch(fetchFailed());case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var fetchTeams=function fetchTeams(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var teams;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch(fetchStart());_context2.next=4;return getTeams();case 4:teams=_context2.sent;dispatch(teamsFetchSucceeded(teams));_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);dispatch(fetchFailed());case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export default teamsSlice.reducer;","map":{"version":3,"sources":["C:/Users/Matias/Downloads/svy final/SPreace-frontend/src/state/teams/index.tsx"],"names":["createSlice","teamsList","getTeam","getTeams","teamsById","reduce","accum","team","id","initialState","isInitialized","isLoading","data","teamsSlice","name","reducers","fetchStart","state","fetchFailed","teamFetchSucceeded","action","payload","teamsFetchSucceeded","actions","fetchTeam","teamId","dispatch","fetchTeams","teams","reducer"],"mappings":"0qBAAA,sCACA,OAASA,WAAT,KAA2C,kBAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CAGA,OAASC,OAAT,CAAkBC,QAAlB,KAAkC,WAAlC,CAEA,GAAMC,CAAAA,SAAoB,CAAGH,SAAS,CAACI,MAAV,CAAiB,SAACC,KAAD,CAAQC,IAAR,CAAiB,CAC7D,sCACKD,KADL,wBAEGC,IAAI,CAACC,EAFR,CAEaD,IAFb,GAID,CAL4B,CAK1B,EAL0B,CAA7B,CAOA,GAAME,CAAAA,YAAwB,CAAG,CAC/BC,aAAa,CAAE,KADgB,CAE/BC,SAAS,CAAE,IAFoB,CAG/BC,IAAI,CAAER,SAHyB,CAAjC,CAMA,MAAO,IAAMS,CAAAA,UAAU,CAAGb,WAAW,CAAC,CACpCc,IAAI,CAAE,OAD8B,CAEpCL,YAAY,CAAZA,YAFoC,CAGpCM,QAAQ,CAAE,CACRC,UAAU,CAAE,oBAACC,KAAD,CAAW,CACrBA,KAAK,CAACN,SAAN,CAAkB,IAAlB,CACD,CAHO,CAIRO,WAAW,CAAE,qBAACD,KAAD,CAAW,CACtBA,KAAK,CAACN,SAAN,CAAkB,KAAlB,CACAM,KAAK,CAACP,aAAN,CAAsB,IAAtB,CACD,CAPO,CAQRS,kBAAkB,CAAE,4BAACF,KAAD,CAAQG,MAAR,CAAwC,CAC1DH,KAAK,CAACP,aAAN,CAAsB,IAAtB,CACAO,KAAK,CAACN,SAAN,CAAkB,KAAlB,CACAM,KAAK,CAACL,IAAN,CAAWQ,MAAM,CAACC,OAAP,CAAeb,EAA1B,EAAgCY,MAAM,CAACC,OAAvC,CACD,CAZO,CAaRC,mBAAmB,CAAE,6BAACL,KAAD,CAAQG,MAAR,CAA6C,CAChEH,KAAK,CAACP,aAAN,CAAsB,IAAtB,CACAO,KAAK,CAACN,SAAN,CAAkB,KAAlB,CACAM,KAAK,CAACL,IAAN,CAAaQ,MAAM,CAACC,OAApB,CACD,CAjBO,CAH0B,CAAD,CAA9B,CAwBP;wBACoFR,UAAU,CAACU,O,CAAhFP,U,qBAAAA,U,CAAYG,kB,qBAAAA,kB,CAAoBD,W,qBAAAA,W,CAAaI,mB,qBAAAA,mB,CAE5D;sEACA,MAAO,IAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,iGAAoB,iBAAOC,QAAP,2IAEzCA,QAAQ,CAACV,UAAU,EAAX,CAAR,CAFyC,sBAGtBd,CAAAA,OAAO,CAACuB,MAAD,CAHe,QAGnClB,IAHmC,eAIzCmB,QAAQ,CAACP,kBAAkB,CAACZ,IAAD,CAAnB,CAAR,CAJyC,+EAMzCmB,QAAQ,CAACR,WAAW,EAAZ,CAAR,CANyC,oEAApB,gEAAlB,CAUP,MAAO,IAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,mGAAM,kBAAOD,QAAP,iJAE5BA,QAAQ,CAACV,UAAU,EAAX,CAAR,CAF4B,uBAGRb,CAAAA,QAAQ,EAHA,QAGtByB,KAHsB,gBAI5BF,QAAQ,CAACJ,mBAAmB,CAACM,KAAD,CAApB,CAAR,CAJ4B,mFAM5BF,QAAQ,CAACR,WAAW,EAAZ,CAAR,CAN4B,sEAAN,kEAAnB,CAUP,cAAeL,CAAAA,UAAU,CAACgB,OAA1B","sourcesContent":["/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport teamsList from 'config/constants/teams'\r\nimport { Team } from 'config/constants/types'\r\nimport { TeamsById, TeamsState } from '../types'\r\nimport { getTeam, getTeams } from './helpers'\r\n\r\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\r\n  return {\r\n    ...accum,\r\n    [team.id]: team,\r\n  }\r\n}, {})\r\n\r\nconst initialState: TeamsState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: teamsById,\r\n}\r\n\r\nexport const teamsSlice = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {\r\n    fetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    fetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data[action.payload.id] = action.payload\r\n    },\r\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const team = await getTeam(teamId)\r\n    dispatch(teamFetchSucceeded(team))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport const fetchTeams = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const teams = await getTeams()\r\n    dispatch(teamsFetchSucceeded(teams))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport default teamsSlice.reducer\r\n"]},"metadata":{},"sourceType":"module"}
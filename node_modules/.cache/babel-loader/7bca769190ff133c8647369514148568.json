{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/Matias/Downloads/svy final/SPreace-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React from'react';import styled from'styled-components';import{useRouteMatch,Link}from'react-router-dom';import{ButtonMenu,ButtonMenuItem,Toggle,Text}from'@pancakeswap-libs/uikit';import useI18n from'hooks/useI18n';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PoolTabButtons=function PoolTabButtons(_ref){var stackedOnly=_ref.stackedOnly,setStackedOnly=_ref.setStackedOnly;var _useRouteMatch=useRouteMatch(),url=_useRouteMatch.url,isExact=_useRouteMatch.isExact;var TranslateString=useI18n();return/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsxs(ToggleWrapper,{children:[/*#__PURE__*/_jsx(Toggle,{checked:stackedOnly,onChange:function onChange(){return setStackedOnly(!stackedOnly);}}),/*#__PURE__*/_jsxs(Text,{children:[\" \",TranslateString(999,'Staked only')]})]}),/*#__PURE__*/_jsxs(ButtonMenu,{activeIndex:isExact?0:1,scale:\"sm\",variant:\"subtle\",children:[/*#__PURE__*/_jsx(ButtonMenuItem,{as:Link,to:\"\".concat(url),children:TranslateString(1198,'Live')}),/*#__PURE__*/_jsx(ButtonMenuItem,{as:Link,to:\"\".concat(url,\"/history\"),children:TranslateString(388,'Finished')})]})]});};export default PoolTabButtons;var Wrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  margin-bottom: 32px;\\n\"])));var ToggleWrapper=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  margin-right: 32px;\\n\\n  \",\" {\\n    margin-left: 8px;\\n  }\\n\"])),Text);","map":{"version":3,"sources":["C:/Users/Matias/Downloads/svy final/SPreace-frontend/src/views/Pools/components/PoolTabButtons/index.tsx"],"names":["React","styled","useRouteMatch","Link","ButtonMenu","ButtonMenuItem","Toggle","Text","useI18n","PoolTabButtons","stackedOnly","setStackedOnly","url","isExact","TranslateString","Wrapper","div","ToggleWrapper"],"mappings":"gOAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,aAAT,CAAwBC,IAAxB,KAAoC,kBAApC,CACA,OAASC,UAAT,CAAqBC,cAArB,CAAqCC,MAArC,CAA6CC,IAA7C,KAAyD,yBAAzD,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAqC,IAAlCC,CAAAA,WAAkC,MAAlCA,WAAkC,CAArBC,cAAqB,MAArBA,cAAqB,oBACjCT,aAAa,EADoB,CAClDU,GADkD,gBAClDA,GADkD,CAC7CC,OAD6C,gBAC7CA,OAD6C,CAE1D,GAAMC,CAAAA,eAAe,CAAGN,OAAO,EAA/B,CAEA,mBACE,MAAC,OAAD,yBACE,MAAC,aAAD,yBACE,KAAC,MAAD,EAAQ,OAAO,CAAEE,WAAjB,CAA8B,QAAQ,CAAE,0BAAMC,CAAAA,cAAc,CAAC,CAACD,WAAF,CAApB,EAAxC,EADF,cAEE,MAAC,IAAD,gBAAQI,eAAe,CAAC,GAAD,CAAM,aAAN,CAAvB,GAFF,GADF,cAKE,MAAC,UAAD,EAAY,WAAW,CAAED,OAAO,CAAG,CAAH,CAAO,CAAvC,CAA0C,KAAK,CAAC,IAAhD,CAAqD,OAAO,CAAC,QAA7D,wBACE,KAAC,cAAD,EAAgB,EAAE,CAAEV,IAApB,CAA0B,EAAE,WAAKS,GAAL,CAA5B,UACGE,eAAe,CAAC,IAAD,CAAO,MAAP,CADlB,EADF,cAIE,KAAC,cAAD,EAAgB,EAAE,CAAEX,IAApB,CAA0B,EAAE,WAAKS,GAAL,YAA5B,UACGE,eAAe,CAAC,GAAD,CAAM,UAAN,CADlB,EAJF,GALF,GADF,CAgBD,CApBD,CAsBA,cAAeL,CAAAA,cAAf,CAEA,GAAMM,CAAAA,OAAO,CAAGd,MAAM,CAACe,GAAV,iKAAb,CAOA,GAAMC,CAAAA,aAAa,CAAGhB,MAAM,CAACe,GAAV,yMAMfT,IANe,CAAnB","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst PoolTabButtons = ({ stackedOnly, setStackedOnly }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToggleWrapper>\r\n        <Toggle checked={stackedOnly} onChange={() => setStackedOnly(!stackedOnly)} />\r\n        <Text> {TranslateString(999, 'Staked only')}</Text>\r\n      </ToggleWrapper>\r\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {TranslateString(1198, 'Live')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          {TranslateString(388, 'Finished')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-right: 32px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n"]},"metadata":{},"sourceType":"module"}
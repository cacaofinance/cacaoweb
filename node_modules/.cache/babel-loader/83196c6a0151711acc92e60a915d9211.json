{"ast":null,"code":"import{useEffect}from'react';import{connectorLocalStorageKey,ConnectorNames}from'@pancakeswap-libs/uikit';import useAuth from'hooks/useAuth';var useEagerConnect=function useEagerConnect(){var _useAuth=useAuth(),login=_useAuth.login;useEffect(function(){var connectorId=window.localStorage.getItem(connectorLocalStorageKey);// Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\n// into the Window object in time causing it to throw an error\n// TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\nif(connectorId&&connectorId!==ConnectorNames.BSC){login(connectorId);}},[login]);};export default useEagerConnect;","map":{"version":3,"sources":["C:/Users/Matias/Downloads/svy final/SPreace-frontend/src/hooks/useEagerConnect.ts"],"names":["useEffect","connectorLocalStorageKey","ConnectorNames","useAuth","useEagerConnect","login","connectorId","window","localStorage","getItem","BSC"],"mappings":"AAAA,OAASA,SAAT,KAA0B,OAA1B,CACA,OAASC,wBAAT,CAAmCC,cAAnC,KAAyD,yBAAzD,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,cACVD,OAAO,EADG,CACpBE,KADoB,UACpBA,KADoB,CAG5BL,SAAS,CAAC,UAAM,CACd,GAAMM,CAAAA,WAAW,CAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BR,wBAA5B,CAApB,CAEA;AACA;AACA;AACA,GAAIK,WAAW,EAAIA,WAAW,GAAKJ,cAAc,CAACQ,GAAlD,CAAuD,CACrDL,KAAK,CAACC,WAAD,CAAL,CACD,CACF,CATQ,CASN,CAACD,KAAD,CATM,CAAT,CAUD,CAbD,CAeA,cAAeD,CAAAA,eAAf","sourcesContent":["import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap-libs/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n\r\n    // Disable eager connect for BSC Wallet. Currently the BSC Wallet extension does not inject BinanceChain\r\n    // into the Window object in time causing it to throw an error\r\n    // TODO: Figure out an elegant way to listen for when the BinanceChain object is ready\r\n    if (connectorId && connectorId !== ConnectorNames.BSC) {\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{useCountUp}from'react-countup';import{Text}from'@pancakeswap-libs/uikit';import{jsxs as _jsxs}from\"react/jsx-runtime\";var CardValue=function CardValue(_ref){var value=_ref.value,decimals=_ref.decimals,_ref$fontSize=_ref.fontSize,fontSize=_ref$fontSize===void 0?'40px':_ref$fontSize,_ref$lineHeight=_ref.lineHeight,lineHeight=_ref$lineHeight===void 0?'1':_ref$lineHeight,_ref$prefix=_ref.prefix,prefix=_ref$prefix===void 0?'':_ref$prefix,_ref$bold=_ref.bold,bold=_ref$bold===void 0?true:_ref$bold,_ref$color=_ref.color,color=_ref$color===void 0?'text':_ref$color;var _useCountUp=useCountUp({start:0,end:value,duration:1,separator:',',decimals:// eslint-disable-next-line no-nested-ternary\ndecimals!==undefined?decimals:value<0?4:value>1e5?0:3}),countUp=_useCountUp.countUp,update=_useCountUp.update;var updateValue=useRef(update);useEffect(function(){updateValue.current(value);},[value,updateValue]);return/*#__PURE__*/_jsxs(Text,{bold:bold,fontSize:fontSize,style:{lineHeight:lineHeight},color:color,children:[prefix,countUp]});};export default CardValue;","map":{"version":3,"sources":["C:/Users/Matias/Downloads/svy final/SPreace-frontend/src/views/Home/components/CardValue.tsx"],"names":["React","useEffect","useRef","useCountUp","Text","CardValue","value","decimals","fontSize","lineHeight","prefix","bold","color","start","end","duration","separator","undefined","countUp","update","updateValue","current"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,OAASC,UAAT,KAA2B,eAA3B,CACA,OAASC,IAAT,KAAqB,yBAArB,C,6CAYA,GAAMC,CAAAA,SAAmC,CAAG,QAAtCA,CAAAA,SAAsC,MAQtC,IAPJC,CAAAA,KAOI,MAPJA,KAOI,CANJC,QAMI,MANJA,QAMI,oBALJC,QAKI,CALJA,QAKI,wBALO,MAKP,oCAJJC,UAII,CAJJA,UAII,0BAJS,GAIT,kCAHJC,MAGI,CAHJA,MAGI,sBAHK,EAGL,4BAFJC,IAEI,CAFJA,IAEI,oBAFG,IAEH,2BADJC,KACI,CADJA,KACI,qBADI,MACJ,4BACwBT,UAAU,CAAC,CACrCU,KAAK,CAAE,CAD8B,CAErCC,GAAG,CAAER,KAFgC,CAGrCS,QAAQ,CAAE,CAH2B,CAIrCC,SAAS,CAAE,GAJ0B,CAKrCT,QAAQ,CACN;AACAA,QAAQ,GAAKU,SAAb,CAAyBV,QAAzB,CAAoCD,KAAK,CAAG,CAAR,CAAY,CAAZ,CAAgBA,KAAK,CAAG,GAAR,CAAc,CAAd,CAAkB,CAPnC,CAAD,CADlC,CACIY,OADJ,aACIA,OADJ,CACaC,MADb,aACaA,MADb,CAWJ,GAAMC,CAAAA,WAAW,CAAGlB,MAAM,CAACiB,MAAD,CAA1B,CAEAlB,SAAS,CAAC,UAAM,CACdmB,WAAW,CAACC,OAAZ,CAAoBf,KAApB,EACD,CAFQ,CAEN,CAACA,KAAD,CAAQc,WAAR,CAFM,CAAT,CAIA,mBACE,MAAC,IAAD,EAAM,IAAI,CAAET,IAAZ,CAAkB,QAAQ,CAAEH,QAA5B,CAAsC,KAAK,CAAE,CAAEC,UAAU,CAAVA,UAAF,CAA7C,CAA6D,KAAK,CAAEG,KAApE,WACGF,MADH,CAEGQ,OAFH,GADF,CAMD,CA/BD,CAiCA,cAAeb,CAAAA,SAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  lineHeight?: string\r\n  prefix?: string\r\n  bold?: boolean\r\n  color?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({\r\n  value,\r\n  decimals,\r\n  fontSize = '40px',\r\n  lineHeight = '1',\r\n  prefix = '',\r\n  bold = true,\r\n  color = 'text',\r\n}) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\r\n      {prefix}\r\n      {countUp}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n"]},"metadata":{},"sourceType":"module"}
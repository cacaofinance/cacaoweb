{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$(),\n    _s15 = $RefreshSig$(),\n    _s16 = $RefreshSig$(),\n    _s17 = $RefreshSig$(),\n    _s18 = $RefreshSig$(),\n    _s19 = $RefreshSig$(),\n    _s20 = $RefreshSig$(),\n    _s21 = $RefreshSig$(),\n    _s22 = $RefreshSig$();\n\nimport { useEffect, useMemo } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { kebabCase } from 'lodash';\nimport { useWeb3React } from '@web3-react/core';\nimport { toastTypes } from '@pancakeswap-libs/uikit';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getWeb3NoAccount } from 'utils/web3';\nimport useRefresh from 'hooks/useRefresh';\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync, push as pushToast, remove as removeToast, clear as clearToast, setBlock } from './actions';\nimport { fetchProfile } from './profile';\nimport { fetchTeam, fetchTeams } from './teams';\nimport { fetchAchievements } from './achievements';\nimport { fetchPrices } from './prices';\nconst ZERO = new BigNumber(0);\nexport const useFetchPublicData = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync());\n    dispatch(fetchPoolsPublicDataAsync());\n  }, [dispatch, slowRefresh]);\n  useEffect(() => {\n    const web3 = getWeb3NoAccount();\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber();\n      dispatch(setBlock(blockNumber));\n    }, 6000);\n    return () => clearInterval(interval);\n  }, [dispatch]);\n}; // Farms\n\n_s(useFetchPublicData, \"wuS4Y8EKVAeAtW/NPPlvO8B968o=\", false, function () {\n  return [useDispatch, useRefresh];\n});\n\nexport const useFarms = () => {\n  _s2();\n\n  const farms = useSelector(state => state.farms.data);\n  return farms;\n};\n\n_s2(useFarms, \"40tjDYBLbzKzCIdd0cwm+UIfe9E=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromPid = pid => {\n  _s3();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.pid === pid));\n  return farm;\n};\n\n_s3(useFarmFromPid, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromSymbol = lpSymbol => {\n  _s4();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.lpSymbol === lpSymbol));\n  return farm;\n};\n\n_s4(useFarmFromSymbol, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmUser = pid => {\n  _s5();\n\n  const farm = useFarmFromPid(pid);\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0)\n  };\n}; // Pools\n\n_s5(useFarmUser, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const usePools = account => {\n  _s6();\n\n  const {\n    fastRefresh\n  } = useRefresh();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n  const pools = useSelector(state => state.pools.data);\n  return pools;\n};\n\n_s6(usePools, \"WIyMD4ufrhPkRVRaHSFmHSaimvo=\", false, function () {\n  return [useRefresh, useDispatch, useSelector];\n});\n\nexport const usePoolFromPid = sousId => {\n  _s7();\n\n  const pool = useSelector(state => state.pools.data.find(p => p.sousId === sousId));\n  return pool;\n}; // Prices\n\n_s7(usePoolFromPid, \"NElEvYvoNsaNFrfsmEnHfa4jRII=\", false, function () {\n  return [useSelector];\n});\n\nexport const usePriceBnbBusd = () => {\n  _s8();\n\n  const pid = 3; // BUSD-BNB LP\n\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(1).div(farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s8(usePriceBnbBusd, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const usePriceCakeBusd = () => {\n  _s9();\n\n  const pid = 1; // CAKE-BNB LP\n\n  const bnbPriceUSD = usePriceBnbBusd();\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s9(usePriceCakeBusd, \"XFAtU4CCq8QZhqqSng08R0qLgoc=\", false, function () {\n  return [usePriceBnbBusd, useFarmFromPid];\n});\n\nexport const usePriceSVYBusd = () => {\n  _s10();\n\n  const pid = 2; // CAKE-BNB LP\n\n  const bnbPriceUSD = usePriceBnbBusd();\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s10(usePriceSVYBusd, \"XFAtU4CCq8QZhqqSng08R0qLgoc=\", false, function () {\n  return [usePriceBnbBusd, useFarmFromPid];\n});\n\nexport const usePriceEthBusd = () => {\n  _s11();\n\n  const pid = 4; // ETH-BNB LP\n\n  const bnbPriceUSD = usePriceBnbBusd();\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO;\n}; // Toasts\n\n_s11(usePriceEthBusd, \"XFAtU4CCq8QZhqqSng08R0qLgoc=\", false, function () {\n  return [usePriceBnbBusd, useFarmFromPid];\n});\n\nexport const useToast = () => {\n  _s12();\n\n  const dispatch = useDispatch();\n  const helpers = useMemo(() => {\n    const push = toast => dispatch(pushToast(toast));\n\n    return {\n      toastError: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.DANGER,\n          title,\n          description\n        });\n      },\n      toastInfo: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.INFO,\n          title,\n          description\n        });\n      },\n      toastSuccess: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.SUCCESS,\n          title,\n          description\n        });\n      },\n      toastWarning: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.WARNING,\n          title,\n          description\n        });\n      },\n      push,\n      remove: id => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast())\n    };\n  }, [dispatch]);\n  return helpers;\n}; // Profile\n\n_s12(useToast, \"sUDVWQm6KuNx8WS5X7Vf7K7gwmw=\", false, function () {\n  return [useDispatch];\n});\n\nexport const useFetchProfile = () => {\n  _s13();\n\n  const {\n    account\n  } = useWeb3React();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchProfile(account));\n  }, [account, dispatch]);\n};\n\n_s13(useFetchProfile, \"vU9PSvh4B+dXA6jrPCjdHHFXuTY=\", false, function () {\n  return [useWeb3React, useDispatch];\n});\n\nexport const useProfile = () => {\n  _s14();\n\n  const {\n    isInitialized,\n    isLoading,\n    data,\n    hasRegistered\n  } = useSelector(state => state.profile);\n  return {\n    profile: data,\n    hasProfile: isInitialized && hasRegistered,\n    isInitialized,\n    isLoading\n  };\n}; // Teams\n\n_s14(useProfile, \"IKFRbj5HxYVQqavhAzR0F+CGiS4=\", false, function () {\n  return [useSelector];\n});\n\nexport const useTeam = id => {\n  _s15();\n\n  const team = useSelector(state => state.teams.data[id]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTeam(id));\n  }, [id, dispatch]);\n  return team;\n};\n\n_s15(useTeam, \"6Ydgnb/W+c1o8rmdL98MENaH9iY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport const useTeams = () => {\n  _s16();\n\n  const {\n    isInitialized,\n    isLoading,\n    data\n  } = useSelector(state => state.teams);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchTeams());\n  }, [dispatch]);\n  return {\n    teams: data,\n    isInitialized,\n    isLoading\n  };\n}; // Achievements\n\n_s16(useTeams, \"vMuTF9KT93zJ/SDKYNNM9rZzenw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\nexport const useFetchAchievements = () => {\n  _s17();\n\n  const {\n    account\n  } = useWeb3React();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account));\n    }\n  }, [account, dispatch]);\n};\n\n_s17(useFetchAchievements, \"vU9PSvh4B+dXA6jrPCjdHHFXuTY=\", false, function () {\n  return [useWeb3React, useDispatch];\n});\n\nexport const useAchievements = () => {\n  _s18();\n\n  const achievements = useSelector(state => state.achievements.data);\n  return achievements;\n}; // Prices\n\n_s18(useAchievements, \"YSK51t5rwnyiHZ93Q8BnGfHM9jA=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFetchPriceList = () => {\n  _s19();\n\n  const {\n    slowRefresh\n  } = useRefresh();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchPrices());\n  }, [dispatch, slowRefresh]);\n};\n\n_s19(useFetchPriceList, \"ODIO3TDCpvQIMp0pAFTOj2x4j3w=\", false, function () {\n  return [useRefresh, useDispatch];\n});\n\nexport const useGetApiPrices = () => {\n  _s20();\n\n  const prices = useSelector(state => state.prices.data);\n  return prices;\n};\n\n_s20(useGetApiPrices, \"FfFSnB6kLWyrPuGGju2q0Rwh7JY=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetApiPrice = token => {\n  _s21();\n\n  const prices = useGetApiPrices();\n\n  if (!prices) {\n    return null;\n  }\n\n  return prices[token.toLowerCase()];\n}; // Block\n\n_s21(useGetApiPrice, \"4RSofgi5q8qs6bn/kfSx+OTTFNc=\", false, function () {\n  return [useGetApiPrices];\n});\n\nexport const useBlock = () => {\n  _s22();\n\n  return useSelector(state => state.block);\n};\n\n_s22(useBlock, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["C:/PROYECTOS/svy.finance/src/state/hooks.ts"],"names":["useEffect","useMemo","BigNumber","kebabCase","useWeb3React","toastTypes","useSelector","useDispatch","getWeb3NoAccount","useRefresh","fetchFarmsPublicDataAsync","fetchPoolsPublicDataAsync","fetchPoolsUserDataAsync","push","pushToast","remove","removeToast","clear","clearToast","setBlock","fetchProfile","fetchTeam","fetchTeams","fetchAchievements","fetchPrices","ZERO","useFetchPublicData","dispatch","slowRefresh","web3","interval","setInterval","blockNumber","eth","getBlockNumber","clearInterval","useFarms","farms","state","data","useFarmFromPid","pid","farm","find","f","useFarmFromSymbol","lpSymbol","useFarmUser","allowance","userData","tokenBalance","stakedBalance","earnings","usePools","account","fastRefresh","pools","usePoolFromPid","sousId","pool","p","usePriceBnbBusd","tokenPriceVsQuote","div","usePriceCakeBusd","bnbPriceUSD","times","usePriceSVYBusd","usePriceEthBusd","useToast","helpers","toast","toastError","title","description","id","type","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","useFetchProfile","useProfile","isInitialized","isLoading","hasRegistered","profile","hasProfile","useTeam","team","teams","useTeams","useFetchAchievements","useAchievements","achievements","useFetchPriceList","useGetApiPrices","prices","useGetApiPrice","token","toLowerCase","useBlock","block"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { kebabCase } from 'lodash'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Toast, toastTypes } from '@pancakeswap-libs/uikit'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Team } from 'config/constants/types'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport {\r\n  fetchFarmsPublicDataAsync,\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  push as pushToast,\r\n  remove as removeToast,\r\n  clear as clearToast,\r\n  setBlock,\r\n} from './actions'\r\nimport { State, Farm, Pool, Block, ProfileState, TeamsState, AchievementState, PriceState } from './types'\r\nimport { fetchProfile } from './profile'\r\nimport { fetchTeam, fetchTeams } from './teams'\r\nimport { fetchAchievements } from './achievements'\r\nimport { fetchPrices } from './prices'\r\n\r\nconst ZERO = new BigNumber(0)\r\n\r\nexport const useFetchPublicData = () => {\r\n  const dispatch = useDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync())\r\n    dispatch(fetchPoolsPublicDataAsync())\r\n  }, [dispatch, slowRefresh])\r\n\r\n  useEffect(() => {\r\n    const web3 = getWeb3NoAccount()\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await web3.eth.getBlockNumber()\r\n      dispatch(setBlock(blockNumber))\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  \r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePoolFromPid = (sousId): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return pool\r\n}\r\n\r\n// Prices\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const pid = 3 // BUSD-BNB LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? new BigNumber(1).div(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const pid = 1 // CAKE-BNB LP\r\n  const bnbPriceUSD = usePriceBnbBusd()\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\r\n}\r\nexport const usePriceSVYBusd = (): BigNumber => {\r\n  const pid = 2 // CAKE-BNB LP\r\n  const bnbPriceUSD = usePriceBnbBusd()\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\nexport const usePriceEthBusd = (): BigNumber => {\r\n  const pid = 4 // ETH-BNB LP\r\n  const bnbPriceUSD = usePriceBnbBusd()\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\r\n}\r\n\r\n// Toasts\r\nexport const useToast = () => {\r\n  const dispatch = useDispatch()\r\n  const helpers = useMemo(() => {\r\n    const push = (toast: Toast) => dispatch(pushToast(toast))\r\n\r\n    return {\r\n      toastError: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\r\n      },\r\n      toastInfo: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\r\n      },\r\n      toastSuccess: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\r\n      },\r\n      toastWarning: (title: string, description?: string) => {\r\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\r\n      },\r\n      push,\r\n      remove: (id: string) => dispatch(removeToast(id)),\r\n      clear: () => dispatch(clearToast()),\r\n    }\r\n  }, [dispatch])\r\n\r\n  return helpers\r\n}\r\n\r\n// Profile\r\n\r\nexport const useFetchProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProfile(account))\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\r\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\r\n}\r\n\r\n// Teams\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n\r\n// Achievements\r\n\r\nexport const useFetchAchievements = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchAchievements(account))\r\n    }\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useAchievements = () => {\r\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\r\n  return achievements\r\n}\r\n\r\n// Prices\r\nexport const useFetchPriceList = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPrices())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const useGetApiPrices = () => {\r\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\r\n  return prices\r\n}\r\n\r\nexport const useGetApiPrice = (token: string) => {\r\n  const prices = useGetApiPrices()\r\n\r\n  if (!prices) {\r\n    return null\r\n  }\r\n  return prices[token.toLowerCase()]\r\n}\r\n\r\n// Block\r\nexport const useBlock = (): Block => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
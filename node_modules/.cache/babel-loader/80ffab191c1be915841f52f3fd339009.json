{"ast":null,"code":"import _defineProperty from\"C:/Users/Matias/Downloads/svy final/SPreace-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _connectorsByName;import{InjectedConnector}from'@web3-react/injected-connector';import{WalletConnectConnector}from'@web3-react/walletconnect-connector';import{BscConnector}from'@binance-chain/bsc-connector';import{ConnectorNames}from'@pancakeswap-libs/uikit';import getNodeUrl from'./getRpcUrl';var POLLING_INTERVAL=12000;var rpcUrl=getNodeUrl();var chainId=parseInt(process.env.REACT_APP_CHAIN_ID,10);var injected=new InjectedConnector({supportedChainIds:[chainId]});var walletconnect=new WalletConnectConnector({rpc:_defineProperty({},chainId,rpcUrl),bridge:'https://bridge.walletconnect.org',qrcode:true,pollingInterval:POLLING_INTERVAL});var bscConnector=new BscConnector({supportedChainIds:[chainId]});export var connectorsByName=(_connectorsByName={},_defineProperty(_connectorsByName,ConnectorNames.Injected,injected),_defineProperty(_connectorsByName,ConnectorNames.WalletConnect,walletconnect),_defineProperty(_connectorsByName,ConnectorNames.BSC,bscConnector),_connectorsByName);export var getLibrary=function getLibrary(provider){return provider;};","map":{"version":3,"sources":["C:/Users/Matias/Downloads/svy final/SPreace-frontend/src/utils/web3React.ts"],"names":["InjectedConnector","WalletConnectConnector","BscConnector","ConnectorNames","getNodeUrl","POLLING_INTERVAL","rpcUrl","chainId","parseInt","process","env","REACT_APP_CHAIN_ID","injected","supportedChainIds","walletconnect","rpc","bridge","qrcode","pollingInterval","bscConnector","connectorsByName","Injected","WalletConnect","BSC","getLibrary","provider"],"mappings":"mMAAA,OAASA,iBAAT,KAAkC,gCAAlC,CACA,OAASC,sBAAT,KAAuC,qCAAvC,CACA,OAASC,YAAT,KAA6B,8BAA7B,CACA,OAASC,cAAT,KAA+B,yBAA/B,CAEA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,KAAzB,CACA,GAAMC,CAAAA,MAAM,CAAGF,UAAU,EAAzB,CACA,GAAMG,CAAAA,OAAO,CAAGC,QAAQ,CAACC,OAAO,CAACC,GAAR,CAAYC,kBAAb,CAAiC,EAAjC,CAAxB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,GAAIZ,CAAAA,iBAAJ,CAAsB,CAAEa,iBAAiB,CAAE,CAACN,OAAD,CAArB,CAAtB,CAAjB,CAEA,GAAMO,CAAAA,aAAa,CAAG,GAAIb,CAAAA,sBAAJ,CAA2B,CAC/Cc,GAAG,oBAAKR,OAAL,CAAeD,MAAf,CAD4C,CAE/CU,MAAM,CAAE,kCAFuC,CAG/CC,MAAM,CAAE,IAHuC,CAI/CC,eAAe,CAAEb,gBAJ8B,CAA3B,CAAtB,CAOA,GAAMc,CAAAA,YAAY,CAAG,GAAIjB,CAAAA,YAAJ,CAAiB,CAAEW,iBAAiB,CAAE,CAACN,OAAD,CAArB,CAAjB,CAArB,CAEA,MAAO,IAAMa,CAAAA,gBAA4D,yDACtEjB,cAAc,CAACkB,QADuD,CAC5CT,QAD4C,oCAEtET,cAAc,CAACmB,aAFuD,CAEvCR,aAFuC,oCAGtEX,cAAc,CAACoB,GAHuD,CAGjDJ,YAHiD,oBAAlE,CAMP,MAAO,IAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,QAAD,CAAoB,CAC5C,MAAOA,CAAAA,QAAP,CACD,CAFM","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ConnectorNames } from '@pancakeswap-libs/uikit'\r\nimport Web3 from 'web3'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): Web3 => {\r\n  return provider\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
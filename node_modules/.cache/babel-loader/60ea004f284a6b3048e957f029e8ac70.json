{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/Matias/Downloads/new/svy.finance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/Matias/Downloads/new/svy.finance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:/Users/Matias/Downloads/new/svy.finance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/Users/Matias/Downloads/new/svy.finance/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SourceFilesModel = exports.SourceFiles = void 0;\n\nvar core_1 = require(\"../core\");\n\nvar SourceFiles = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(SourceFiles, _core_1$CrowdinApi);\n\n  var _super = _createSuper(SourceFiles);\n\n  function SourceFiles() {\n    _classCallCheck(this, SourceFiles);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SourceFiles, [{\n    key: \"listProjectBranches\",\n    value:\n    /**\r\n     * @param projectId project identifier\r\n     * @param name filter branch by name\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     */\n    function listProjectBranches(projectId, name, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/branches\");\n      url = this.addQueryParam(url, 'name', name);\n      return this.getList(url, limit, offset);\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param request request body\r\n     */\n\n  }, {\n    key: \"createBranch\",\n    value: function createBranch(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/branches\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param branchId branch identifier\r\n     */\n\n  }, {\n    key: \"getBranch\",\n    value: function getBranch(projectId, branchId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/branches/\").concat(branchId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param branchId branch identifier\r\n     */\n\n  }, {\n    key: \"deleteBranch\",\n    value: function deleteBranch(projectId, branchId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/branches/\").concat(branchId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param branchId branch identifier\r\n     * @param request request body\r\n     */\n\n  }, {\n    key: \"editBranch\",\n    value: function editBranch(projectId, branchId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/branches/\").concat(branchId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param branchId filter directories by branchId\r\n     * @param directoryId filter directories by directoryId\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     */\n\n  }, {\n    key: \"listProjectDirectories\",\n    value: function listProjectDirectories(projectId, branchId, directoryId, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/directories\");\n      url = this.addQueryParam(url, 'branchId', branchId);\n      url = this.addQueryParam(url, 'directoryId', directoryId);\n      return this.getList(url, limit, offset);\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param request request body\r\n     */\n\n  }, {\n    key: \"createDirectory\",\n    value: function createDirectory(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/directories\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param directoryId directory identifier\r\n     */\n\n  }, {\n    key: \"getDirectory\",\n    value: function getDirectory(projectId, directoryId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/directories/\").concat(directoryId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param directoryId directory identifier\r\n     */\n\n  }, {\n    key: \"deleteDirectory\",\n    value: function deleteDirectory(projectId, directoryId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/directories/\").concat(directoryId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param directoryId directory identifier\r\n     * @param request request body\r\n     */\n\n  }, {\n    key: \"editDirectory\",\n    value: function editDirectory(projectId, directoryId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/directories/\").concat(directoryId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n  }, {\n    key: \"listProjectFiles\",\n    value: function listProjectFiles(projectId, branchIdOrRequest, directoryId, limit, offset, recursion, filter) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files\");\n      var request;\n\n      if (branchIdOrRequest && typeof branchIdOrRequest === 'object') {\n        request = branchIdOrRequest;\n      } else {\n        request = {\n          branchId: branchIdOrRequest,\n          directoryId: directoryId,\n          limit: limit,\n          offset: offset,\n          recursion: recursion,\n          filter: filter\n        };\n      }\n\n      url = this.addQueryParam(url, 'branchId', request.branchId);\n      url = this.addQueryParam(url, 'directoryId', request.directoryId);\n      url = this.addQueryParam(url, 'recursion', request.recursion);\n      url = this.addQueryParam(url, 'filter', request.filter);\n      return this.getList(url, request.limit, request.offset);\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param request request body\r\n     */\n\n  }, {\n    key: \"createFile\",\n    value: function createFile(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param fileId file identifier\r\n     */\n\n  }, {\n    key: \"getFile\",\n    value: function getFile(projectId, fileId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files/\").concat(fileId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param fileId file identifier\r\n     * @param request request body\r\n     */\n\n  }, {\n    key: \"updateOrRestoreFile\",\n    value: function updateOrRestoreFile(projectId, fileId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files/\").concat(fileId);\n      return this.put(url, request, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param fileId file identifier\r\n     */\n\n  }, {\n    key: \"deleteFile\",\n    value: function deleteFile(projectId, fileId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files/\").concat(fileId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param fileId file identifier\r\n     * @param request request body\r\n     */\n\n  }, {\n    key: \"editFile\",\n    value: function editFile(projectId, fileId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files/\").concat(fileId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param fileId file identifier\r\n     */\n\n  }, {\n    key: \"downloadFile\",\n    value: function downloadFile(projectId, fileId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files/\").concat(fileId, \"/download\");\n      return this.get(url, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param fileId file identifier\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     */\n\n  }, {\n    key: \"listFileRevisions\",\n    value: function listFileRevisions(projectId, fileId, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files/\").concat(fileId, \"/revisions\");\n      return this.getList(url, limit, offset);\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param fileId file identifier\r\n     * @param revisionId revision identifier\r\n     */\n\n  }, {\n    key: \"getFileRevision\",\n    value: function getFileRevision(projectId, fileId, revisionId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/files/\").concat(fileId, \"/revisions/\").concat(revisionId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param branchId filter builds by branchId\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     */\n\n  }, {\n    key: \"listReviewedSourceFilesBuild\",\n    value: function listReviewedSourceFilesBuild(projectId, branchId, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/strings/reviewed-builds\");\n      url = this.addQueryParam(url, 'branchId', branchId);\n      return this.getList(url, limit, offset);\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param request request body\r\n     */\n\n  }, {\n    key: \"buildReviewedSourceFiles\",\n    value: function buildReviewedSourceFiles(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/strings/reviewed-builds\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param buildId build identifier\r\n     */\n\n  }, {\n    key: \"checkReviewedSourceFilesBuildStatus\",\n    value: function checkReviewedSourceFilesBuildStatus(projectId, buildId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/strings/reviewed-builds/\").concat(buildId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\r\n     * @param projectId project identifier\r\n     * @param buildId build identifier\r\n     */\n\n  }, {\n    key: \"downloadReviewedSourceFiles\",\n    value: function downloadReviewedSourceFiles(projectId, buildId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/strings/reviewed-builds/\").concat(buildId, \"/download\");\n      return this.get(url, this.defaultConfig());\n    }\n  }]);\n\n  return SourceFiles;\n}(core_1.CrowdinApi);\n\nexports.SourceFiles = SourceFiles;\nvar SourceFilesModel;\n\n(function (SourceFilesModel) {\n  var Priority;\n\n  (function (Priority) {\n    Priority[\"LOW\"] = \"low\";\n    Priority[\"NORMAL\"] = \"normal\";\n    Priority[\"HIGH\"] = \"high\";\n  })(Priority = SourceFilesModel.Priority || (SourceFilesModel.Priority = {}));\n\n  var FileType;\n\n  (function (FileType) {\n    FileType[\"AUTO\"] = \"auto\";\n    FileType[\"ANDROID\"] = \"android\";\n    FileType[\"MACOSX\"] = \"macosx\";\n    FileType[\"RESX\"] = \"resx\";\n    FileType[\"PROPERTIES\"] = \"properties\";\n    FileType[\"GETTEXT\"] = \"gettext\";\n    FileType[\"YAML\"] = \"yaml\";\n    FileType[\"PHP\"] = \"php\";\n    FileType[\"JSON\"] = \"json\";\n    FileType[\"XML\"] = \"xml\";\n    FileType[\"INI\"] = \"ini\";\n    FileType[\"RC\"] = \"rc\";\n    FileType[\"RESW\"] = \"resw\";\n    FileType[\"RESJSON\"] = \"resjson\";\n    FileType[\"QTTS\"] = \"qtts\";\n    FileType[\"JOOMLA\"] = \"joomla\";\n    FileType[\"CHROME\"] = \"chrome\";\n    FileType[\"DTD\"] = \"dtd\";\n    FileType[\"DKLANG\"] = \"dklang\";\n    FileType[\"FLEX\"] = \"flex\";\n    FileType[\"NSH\"] = \"nsh\";\n    FileType[\"WXL\"] = \"wxl\";\n    FileType[\"XLIFF\"] = \"xliff\";\n    FileType[\"HTML\"] = \"html\";\n    FileType[\"HAML\"] = \"haml\";\n    FileType[\"TXT\"] = \"txt\";\n    FileType[\"CSV\"] = \"csv\";\n    FileType[\"MD\"] = \"md\";\n    FileType[\"FLSNP\"] = \"flsnp\";\n    FileType[\"FM_HTML\"] = \"fm_html\";\n    FileType[\"FM_MD\"] = \"fm_md\";\n    FileType[\"MEDIAWIKI\"] = \"mediawiki\";\n    FileType[\"DOCX\"] = \"docx\";\n    FileType[\"SBV\"] = \"sbv\";\n    FileType[\"VTT\"] = \"vtt\";\n    FileType[\"SRT\"] = \"srt\";\n  })(FileType = SourceFilesModel.FileType || (SourceFilesModel.FileType = {}));\n\n  var EscapeQuotes;\n\n  (function (EscapeQuotes) {\n    EscapeQuotes[EscapeQuotes[\"ZERO\"] = 0] = \"ZERO\";\n    EscapeQuotes[EscapeQuotes[\"ONE\"] = 1] = \"ONE\";\n    EscapeQuotes[EscapeQuotes[\"TWO\"] = 2] = \"TWO\";\n    EscapeQuotes[EscapeQuotes[\"THREE\"] = 3] = \"THREE\";\n  })(EscapeQuotes = SourceFilesModel.EscapeQuotes || (SourceFilesModel.EscapeQuotes = {}));\n\n  var UpdateOption;\n\n  (function (UpdateOption) {\n    UpdateOption[\"CLEAR_TRANSLATIONS_AND_APPROVALS\"] = \"clear_translations_and_approvals\";\n    UpdateOption[\"KEEP_TRANSLATIONS\"] = \"keep_translations\";\n    UpdateOption[\"KEEP_TRANSLATIONS_AND_APPROVALS\"] = \"keep_translations_and_approvals\";\n  })(UpdateOption = SourceFilesModel.UpdateOption || (SourceFilesModel.UpdateOption = {}));\n})(SourceFilesModel = exports.SourceFilesModel || (exports.SourceFilesModel = {}));","map":{"version":3,"sources":["C:/Users/Matias/Downloads/new/svy.finance/node_modules/@crowdin/crowdin-api-client/out/sourceFiles/index.js"],"names":["Object","defineProperty","exports","value","SourceFilesModel","SourceFiles","core_1","require","projectId","name","limit","offset","url","addQueryParam","getList","request","post","defaultConfig","branchId","get","delete","patch","directoryId","branchIdOrRequest","recursion","filter","fileId","put","revisionId","buildId","CrowdinApi","Priority","FileType","EscapeQuotes","UpdateOption"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SourceFilesModel = exports.SourceFiles = void 0;\r\nconst core_1 = require(\"../core\");\r\nclass SourceFiles extends core_1.CrowdinApi {\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param name filter branch by name\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     */\r\n    listProjectBranches(projectId, name, limit, offset) {\r\n        let url = `${this.url}/projects/${projectId}/branches`;\r\n        url = this.addQueryParam(url, 'name', name);\r\n        return this.getList(url, limit, offset);\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param request request body\r\n     */\r\n    createBranch(projectId, request) {\r\n        const url = `${this.url}/projects/${projectId}/branches`;\r\n        return this.post(url, request, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param branchId branch identifier\r\n     */\r\n    getBranch(projectId, branchId) {\r\n        const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\r\n        return this.get(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param branchId branch identifier\r\n     */\r\n    deleteBranch(projectId, branchId) {\r\n        const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\r\n        return this.delete(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param branchId branch identifier\r\n     * @param request request body\r\n     */\r\n    editBranch(projectId, branchId, request) {\r\n        const url = `${this.url}/projects/${projectId}/branches/${branchId}`;\r\n        return this.patch(url, request, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param branchId filter directories by branchId\r\n     * @param directoryId filter directories by directoryId\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     */\r\n    listProjectDirectories(projectId, branchId, directoryId, limit, offset) {\r\n        let url = `${this.url}/projects/${projectId}/directories`;\r\n        url = this.addQueryParam(url, 'branchId', branchId);\r\n        url = this.addQueryParam(url, 'directoryId', directoryId);\r\n        return this.getList(url, limit, offset);\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param request request body\r\n     */\r\n    createDirectory(projectId, request) {\r\n        const url = `${this.url}/projects/${projectId}/directories`;\r\n        return this.post(url, request, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param directoryId directory identifier\r\n     */\r\n    getDirectory(projectId, directoryId) {\r\n        const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\r\n        return this.get(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param directoryId directory identifier\r\n     */\r\n    deleteDirectory(projectId, directoryId) {\r\n        const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\r\n        return this.delete(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param directoryId directory identifier\r\n     * @param request request body\r\n     */\r\n    editDirectory(projectId, directoryId, request) {\r\n        const url = `${this.url}/projects/${projectId}/directories/${directoryId}`;\r\n        return this.patch(url, request, this.defaultConfig());\r\n    }\r\n    listProjectFiles(projectId, branchIdOrRequest, directoryId, limit, offset, recursion, filter) {\r\n        let url = `${this.url}/projects/${projectId}/files`;\r\n        let request;\r\n        if (branchIdOrRequest && typeof branchIdOrRequest === 'object') {\r\n            request = branchIdOrRequest;\r\n        }\r\n        else {\r\n            request = { branchId: branchIdOrRequest, directoryId, limit, offset, recursion, filter };\r\n        }\r\n        url = this.addQueryParam(url, 'branchId', request.branchId);\r\n        url = this.addQueryParam(url, 'directoryId', request.directoryId);\r\n        url = this.addQueryParam(url, 'recursion', request.recursion);\r\n        url = this.addQueryParam(url, 'filter', request.filter);\r\n        return this.getList(url, request.limit, request.offset);\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param request request body\r\n     */\r\n    createFile(projectId, request) {\r\n        const url = `${this.url}/projects/${projectId}/files`;\r\n        return this.post(url, request, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param fileId file identifier\r\n     */\r\n    getFile(projectId, fileId) {\r\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\r\n        return this.get(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param fileId file identifier\r\n     * @param request request body\r\n     */\r\n    updateOrRestoreFile(projectId, fileId, request) {\r\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\r\n        return this.put(url, request, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param fileId file identifier\r\n     */\r\n    deleteFile(projectId, fileId) {\r\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\r\n        return this.delete(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param fileId file identifier\r\n     * @param request request body\r\n     */\r\n    editFile(projectId, fileId, request) {\r\n        const url = `${this.url}/projects/${projectId}/files/${fileId}`;\r\n        return this.patch(url, request, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param fileId file identifier\r\n     */\r\n    downloadFile(projectId, fileId) {\r\n        const url = `${this.url}/projects/${projectId}/files/${fileId}/download`;\r\n        return this.get(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param fileId file identifier\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     */\r\n    listFileRevisions(projectId, fileId, limit, offset) {\r\n        const url = `${this.url}/projects/${projectId}/files/${fileId}/revisions`;\r\n        return this.getList(url, limit, offset);\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param fileId file identifier\r\n     * @param revisionId revision identifier\r\n     */\r\n    getFileRevision(projectId, fileId, revisionId) {\r\n        const url = `${this.url}/projects/${projectId}/files/${fileId}/revisions/${revisionId}`;\r\n        return this.get(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param branchId filter builds by branchId\r\n     * @param limit maximum number of items to retrieve (default 25)\r\n     * @param offset starting offset in the collection (default 0)\r\n     */\r\n    listReviewedSourceFilesBuild(projectId, branchId, limit, offset) {\r\n        let url = `${this.url}/projects/${projectId}/strings/reviewed-builds`;\r\n        url = this.addQueryParam(url, 'branchId', branchId);\r\n        return this.getList(url, limit, offset);\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param request request body\r\n     */\r\n    buildReviewedSourceFiles(projectId, request) {\r\n        const url = `${this.url}/projects/${projectId}/strings/reviewed-builds`;\r\n        return this.post(url, request, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param buildId build identifier\r\n     */\r\n    checkReviewedSourceFilesBuildStatus(projectId, buildId) {\r\n        const url = `${this.url}/projects/${projectId}/strings/reviewed-builds/${buildId}`;\r\n        return this.get(url, this.defaultConfig());\r\n    }\r\n    /**\r\n     * @param projectId project identifier\r\n     * @param buildId build identifier\r\n     */\r\n    downloadReviewedSourceFiles(projectId, buildId) {\r\n        const url = `${this.url}/projects/${projectId}/strings/reviewed-builds/${buildId}/download`;\r\n        return this.get(url, this.defaultConfig());\r\n    }\r\n}\r\nexports.SourceFiles = SourceFiles;\r\nvar SourceFilesModel;\r\n(function (SourceFilesModel) {\r\n    let Priority;\r\n    (function (Priority) {\r\n        Priority[\"LOW\"] = \"low\";\r\n        Priority[\"NORMAL\"] = \"normal\";\r\n        Priority[\"HIGH\"] = \"high\";\r\n    })(Priority = SourceFilesModel.Priority || (SourceFilesModel.Priority = {}));\r\n    let FileType;\r\n    (function (FileType) {\r\n        FileType[\"AUTO\"] = \"auto\";\r\n        FileType[\"ANDROID\"] = \"android\";\r\n        FileType[\"MACOSX\"] = \"macosx\";\r\n        FileType[\"RESX\"] = \"resx\";\r\n        FileType[\"PROPERTIES\"] = \"properties\";\r\n        FileType[\"GETTEXT\"] = \"gettext\";\r\n        FileType[\"YAML\"] = \"yaml\";\r\n        FileType[\"PHP\"] = \"php\";\r\n        FileType[\"JSON\"] = \"json\";\r\n        FileType[\"XML\"] = \"xml\";\r\n        FileType[\"INI\"] = \"ini\";\r\n        FileType[\"RC\"] = \"rc\";\r\n        FileType[\"RESW\"] = \"resw\";\r\n        FileType[\"RESJSON\"] = \"resjson\";\r\n        FileType[\"QTTS\"] = \"qtts\";\r\n        FileType[\"JOOMLA\"] = \"joomla\";\r\n        FileType[\"CHROME\"] = \"chrome\";\r\n        FileType[\"DTD\"] = \"dtd\";\r\n        FileType[\"DKLANG\"] = \"dklang\";\r\n        FileType[\"FLEX\"] = \"flex\";\r\n        FileType[\"NSH\"] = \"nsh\";\r\n        FileType[\"WXL\"] = \"wxl\";\r\n        FileType[\"XLIFF\"] = \"xliff\";\r\n        FileType[\"HTML\"] = \"html\";\r\n        FileType[\"HAML\"] = \"haml\";\r\n        FileType[\"TXT\"] = \"txt\";\r\n        FileType[\"CSV\"] = \"csv\";\r\n        FileType[\"MD\"] = \"md\";\r\n        FileType[\"FLSNP\"] = \"flsnp\";\r\n        FileType[\"FM_HTML\"] = \"fm_html\";\r\n        FileType[\"FM_MD\"] = \"fm_md\";\r\n        FileType[\"MEDIAWIKI\"] = \"mediawiki\";\r\n        FileType[\"DOCX\"] = \"docx\";\r\n        FileType[\"SBV\"] = \"sbv\";\r\n        FileType[\"VTT\"] = \"vtt\";\r\n        FileType[\"SRT\"] = \"srt\";\r\n    })(FileType = SourceFilesModel.FileType || (SourceFilesModel.FileType = {}));\r\n    let EscapeQuotes;\r\n    (function (EscapeQuotes) {\r\n        EscapeQuotes[EscapeQuotes[\"ZERO\"] = 0] = \"ZERO\";\r\n        EscapeQuotes[EscapeQuotes[\"ONE\"] = 1] = \"ONE\";\r\n        EscapeQuotes[EscapeQuotes[\"TWO\"] = 2] = \"TWO\";\r\n        EscapeQuotes[EscapeQuotes[\"THREE\"] = 3] = \"THREE\";\r\n    })(EscapeQuotes = SourceFilesModel.EscapeQuotes || (SourceFilesModel.EscapeQuotes = {}));\r\n    let UpdateOption;\r\n    (function (UpdateOption) {\r\n        UpdateOption[\"CLEAR_TRANSLATIONS_AND_APPROVALS\"] = \"clear_translations_and_approvals\";\r\n        UpdateOption[\"KEEP_TRANSLATIONS\"] = \"keep_translations\";\r\n        UpdateOption[\"KEEP_TRANSLATIONS_AND_APPROVALS\"] = \"keep_translations_and_approvals\";\r\n    })(UpdateOption = SourceFilesModel.UpdateOption || (SourceFilesModel.UpdateOption = {}));\r\n})(SourceFilesModel = exports.SourceFilesModel || (exports.SourceFilesModel = {}));\r\n"]},"metadata":{},"sourceType":"script"}
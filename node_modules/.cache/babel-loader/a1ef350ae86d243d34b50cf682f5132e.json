{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Matias/Downloads/svy final/SPreace-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Matias/Downloads/svy final/SPreace-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/* eslint-disable no-param-reassign */import{toastTypes}from'@pancakeswap-libs/uikit';import{createSlice}from'@reduxjs/toolkit';import{kebabCase}from'lodash';import{push}from'state/toasts';import{getAchievements}from'./helpers';var initialState={data:[]};export var achievementSlice=createSlice({name:'achievements',initialState:initialState,reducers:{addAchievement:function addAchievement(state,action){state.data.push(action.payload);},addAchievements:function addAchievements(state,action){state.data.concat(action.payload);},setAchievements:function setAchievements(state,action){state.data=action.payload;},clearAchievements:function clearAchievements(state){state.data=[];}}});// Actions\nvar _achievementSlice$act=achievementSlice.actions,addAchievement=_achievementSlice$act.addAchievement,addAchievements=_achievementSlice$act.addAchievements,setAchievements=_achievementSlice$act.setAchievements,clearAchievements=_achievementSlice$act.clearAchievements;// Thunks\nexport{addAchievement,addAchievements,setAchievements,clearAchievements};export var fetchAchievements=function fetchAchievements(account){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var achievements,title;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getAchievements(account);case 3:achievements=_context.sent;dispatch(setAchievements(achievements));_context.next=12;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.error(_context.t0);title='Error fetching achievements';dispatch(push({id:kebabCase(title),type:toastTypes.DANGER,title:title}));case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export default achievementSlice.reducer;","map":{"version":3,"sources":["C:/Users/Matias/Downloads/svy final/SPreace-frontend/src/state/achievements/index.ts"],"names":["toastTypes","createSlice","kebabCase","push","getAchievements","initialState","data","achievementSlice","name","reducers","addAchievement","state","action","payload","addAchievements","concat","setAchievements","clearAchievements","actions","fetchAchievements","account","dispatch","achievements","console","error","title","id","type","DANGER","reducer"],"mappings":"mVAAA,sCACA,OAASA,UAAT,KAA2B,yBAA3B,CACA,OAASC,WAAT,KAAqD,kBAArD,CACA,OAASC,SAAT,KAA0B,QAA1B,CACA,OAASC,IAAT,KAAqB,cAArB,CAEA,OAASC,eAAT,KAAgC,WAAhC,CAEA,GAAMC,CAAAA,YAA8B,CAAG,CACrCC,IAAI,CAAE,EAD+B,CAAvC,CAIA,MAAO,IAAMC,CAAAA,gBAAgB,CAAGN,WAAW,CAAC,CAC1CO,IAAI,CAAE,cADoC,CAE1CH,YAAY,CAAZA,YAF0C,CAG1CI,QAAQ,CAAE,CACRC,cAAc,CAAE,wBAACC,KAAD,CAAQC,MAAR,CAA+C,CAC7DD,KAAK,CAACL,IAAN,CAAWH,IAAX,CAAgBS,MAAM,CAACC,OAAvB,EACD,CAHO,CAIRC,eAAe,CAAE,yBAACH,KAAD,CAAQC,MAAR,CAAiD,CAChED,KAAK,CAACL,IAAN,CAAWS,MAAX,CAAkBH,MAAM,CAACC,OAAzB,EACD,CANO,CAORG,eAAe,CAAE,yBAACL,KAAD,CAAQC,MAAR,CAAiD,CAChED,KAAK,CAACL,IAAN,CAAaM,MAAM,CAACC,OAApB,CACD,CATO,CAURI,iBAAiB,CAAE,2BAACN,KAAD,CAAW,CAC5BA,KAAK,CAACL,IAAN,CAAa,EAAb,CACD,CAZO,CAHgC,CAAD,CAApC,CAmBP;0BACuFC,gBAAgB,CAACW,O,CAAzFR,c,uBAAAA,c,CAAgBI,e,uBAAAA,e,CAAiBE,e,uBAAAA,e,CAAiBC,iB,uBAAAA,iB,CAEjE;yEACA,MAAO,IAAME,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,OAAD,iGAAqB,iBAAOC,QAAP,+KAEvBjB,CAAAA,eAAe,CAACgB,OAAD,CAFQ,QAE5CE,YAF4C,eAGlDD,QAAQ,CAACL,eAAe,CAACM,YAAD,CAAhB,CAAR,CAHkD,+EAKlDC,OAAO,CAACC,KAAR,cACMC,KAN4C,CAMpC,6BANoC,CAOlDJ,QAAQ,CAAClB,IAAI,CAAC,CAAEuB,EAAE,CAAExB,SAAS,CAACuB,KAAD,CAAf,CAAwBE,IAAI,CAAE3B,UAAU,CAAC4B,MAAzC,CAAiDH,KAAK,CAALA,KAAjD,CAAD,CAAL,CAAR,CAPkD,oEAArB,gEAA1B,CAWP,cAAelB,CAAAA,gBAAgB,CAACsB,OAAhC","sourcesContent":["/* eslint-disable no-param-reassign */\r\nimport { toastTypes } from '@pancakeswap-libs/uikit'\r\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\r\nimport { kebabCase } from 'lodash'\r\nimport { push } from 'state/toasts'\r\nimport { AchievementState, Achievement } from '../types'\r\nimport { getAchievements } from './helpers'\r\n\r\nconst initialState: AchievementState = {\r\n  data: [],\r\n}\r\n\r\nexport const achievementSlice = createSlice({\r\n  name: 'achievements',\r\n  initialState,\r\n  reducers: {\r\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\r\n      state.data.push(action.payload)\r\n    },\r\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data.concat(action.payload)\r\n    },\r\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = action.payload\r\n    },\r\n    clearAchievements: (state) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\r\n\r\n// Thunks\r\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const achievements = await getAchievements(account)\r\n    dispatch(setAchievements(achievements))\r\n  } catch (error) {\r\n    console.error(error)\r\n    const title = 'Error fetching achievements'\r\n    dispatch(push({ id: kebabCase(title), type: toastTypes.DANGER, title }))\r\n  }\r\n}\r\n\r\nexport default achievementSlice.reducer\r\n"]},"metadata":{},"sourceType":"module"}